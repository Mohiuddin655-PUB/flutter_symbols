enum Symbols {
  whiteCircle(
    id: "white_circle",
    name: "White Circle",
    symbol: "○",
    code: 0x25CB,
    altCode: "&#x25CB;",
    htmlCode: "&#9675;",
  ),
  dottedCircle(
    id: "dotted_circle",
    name: "Dotted Circle",
    symbol: "◌",
    code: 0x25CC,
    altCode: "&#x25CC;",
    htmlCode: "&#9676;",
  ),
  circleWithVerticalFill(
    id: "circle_with_vertical_fill",
    name: "Circle With Vertical Fill",
    symbol: "◍",
    code: 0x25CD,
    altCode: "&#x25CD;",
    htmlCode: "&#9677;",
  ),
  blackCircle(
    id: "black_circle",
    name: "Black Circle",
    symbol: "●",
    code: 0x25CF,
    altCode: "&#x25CF;",
    htmlCode: "&#9679;",
  ),
  circleWithLeftHalfBlack(
    id: "circle_with_left_half_black",
    name: "Circle With Left Half Black",
    symbol: "◐",
    code: 0x25D0,
    altCode: "&#x25D0;",
    htmlCode: "&#9680;",
  ),
  circleWithRightHalfBlack(
    id: "circle_with_right_half_black",
    name: "Circle With Right Half Black",
    symbol: "◑",
    code: 0x25D1,
    altCode: "&#x25D1;",
    htmlCode: "&#9681;",
  ),
  circleWithLowerHalfBlack(
    id: "circle_with_lower_half_black",
    name: "Circle With Lower Half Black",
    symbol: "◒",
    code: 0x25D2,
    altCode: "&#x25D2;",
    htmlCode: "&#9682;",
  ),
  circleWithUpperHalfBlack(
    id: "circle_with_upper_half_black",
    name: "Circle With Upper Half Black",
    symbol: "◓",
    code: 0x25D3,
    altCode: "&#x25D3;",
    htmlCode: "&#9683;",
  ),
  circleWithUpperRightQuadrantBlack(
    id: "circle_with_upper_right_quadrant_black",
    name: "Circle With Upper Right Quadrant Black",
    symbol: "◔",
    code: 0x25D4,
    altCode: "&#x25D4;",
    htmlCode: "&#9684;",
  ),
  circleWithAllButUpperLeftQuadrantBlack(
    id: "circle_with_all_but_upper_left_quadrant_black",
    name: "Circle With All But Upper Left Quadrant Black",
    symbol: "◕",
    code: 0x25D5,
    altCode: "&#x25D5;",
    htmlCode: "&#9685;",
  ),
  leftHalfBlackCircle(
    id: "left_half_black_circle",
    name: "Left Half Black Circle",
    symbol: "◖",
    code: 0x25D6,
    altCode: "&#x25D6;",
    htmlCode: "&#9686;",
  ),
  rightHalfBlackCircle(
    id: "right_half_black_circle",
    name: "Right Half Black Circle",
    symbol: "◗",
    code: 0x25D7,
    altCode: "&#x25D7;",
    htmlCode: "&#9687;",
  ),
  inverseWhiteCircle(
    id: "inverse_white_circle",
    name: "Inverse White Circle",
    symbol: "◙",
    code: 0x25D9,
    altCode: "&#x25D9;",
    htmlCode: "&#9689;",
  ),
  upperHalfInverseWhiteCircle(
    id: "upper_half_inverse_white_circle",
    name: "Upper Half Inverse White Circle",
    symbol: "◚",
    code: 0x25DA,
    altCode: "&#x25DA;",
    htmlCode: "&#9690;",
  ),
  lowerHalfInverseWhiteCircle(
    id: "lower_half_inverse_white_circle",
    name: "Lower Half Inverse White Circle",
    symbol: "◛",
    code: 0x25DB,
    altCode: "&#x25DB;",
    htmlCode: "&#9691;",
  ),
  upperHalfCircle(
    id: "upper_half_circle",
    name: "Upper Half Circle",
    symbol: "◠",
    code: 0x25E0,
    altCode: "&#x25E0;",
    htmlCode: "&#9696;",
  ),
  lowerHalfCircle(
    id: "lower_half_circle",
    name: "Lower Half Circle",
    symbol: "◡",
    code: 0x25E1,
    altCode: "&#x25E1;",
    htmlCode: "&#9697;",
  ),
  largeCircle(
    id: "large_circle",
    name: "Large Circle",
    symbol: "◯",
    code: 0x25EF,
    altCode: "&#x25EF;",
    htmlCode: "&#9711;",
  ),
  whiteCircleWithUpperLeftQuadrant(
    id: "white_circle_with_upper_left_quadrant",
    name: "White Circle With Upper Left Quadrant",
    symbol: "◴",
    code: 0x25F4,
    altCode: "&#x25F4;",
    htmlCode: "&#9716;",
  ),
  whiteCircleWithLowerLeftQuadrant(
    id: "white_circle_with_lower_left_quadrant",
    name: "White Circle With Lower Left Quadrant",
    symbol: "◵",
    code: 0x25F5,
    altCode: "&#x25F5;",
    htmlCode: "&#9717;",
  ),
  whiteCircleWithLowerRightQuadrant(
    id: "white_circle_with_lower_right_quadrant",
    name: "White Circle With Lower Right Quadrant",
    symbol: "◶",
    code: 0x25F6,
    altCode: "&#x25F6;",
    htmlCode: "&#9718;",
  ),
  whiteCircleWithUpperRightQuadrant(
    id: "white_circle_with_upper_right_quadrant",
    name: "White Circle With Upper Right Quadrant",
    symbol: "◷",
    code: 0x25F7,
    altCode: "&#x25F7;",
    htmlCode: "&#9719;",
  ),
  whiteCircleWithDotRight(
    id: "white_circle_with_dot_right",
    name: "White Circle With Dot Right",
    symbol: "⚆",
    code: 0x2686,
    altCode: "&#x2686;",
    htmlCode: "&#9862;",
  ),
  whiteCircleWithTwoDots(
    id: "white_circle_with_two_dots",
    name: "White Circle With Two Dots",
    symbol: "⚇",
    code: 0x2687,
    altCode: "&#x2687;",
    htmlCode: "&#9863;",
  ),
  blackCircleWithWhiteDotRight(
    id: "black_circle_with_white_dot_right",
    name: "Black Circle With White Dot Right",
    symbol: "⚈",
    code: 0x2688,
    altCode: "&#x2688;",
    htmlCode: "&#9864;",
  ),
  blackCircleWithTwoWhiteDots(
    id: "black_circle_with_two_white_dots",
    name: "Black Circle With Two White Dots",
    symbol: "⚉",
    code: 0x2689,
    altCode: "&#x2689;",
    htmlCode: "&#9865;",
  ),
  mediumWhiteCircle(
    id: "medium_white_circle",
    name: "Medium White Circle",
    symbol: "⚪",
    code: 0x26AA,
    altCode: "&#x26AA;",
    htmlCode: "&#9898;",
  ),
  mediumBlackCircle(
    id: "medium_black_circle",
    name: "Medium Black Circle",
    symbol: "⚫",
    code: 0x26AB,
    altCode: "&#x26AB;",
    htmlCode: "&#9899;",
  ),
  mediumSmallWhiteCircle(
    id: "medium_small_white_circle",
    name: "Medium Small White Circle",
    symbol: "⚬",
    code: 0x26AC,
    altCode: "&#x26AC;",
    htmlCode: "&#9900;",
  ),
  circledWhiteStar(
    id: "circled_white_star",
    name: "Circled White Star",
    symbol: "✪",
    code: 0x272A,
    altCode: "&#x272A;",
    htmlCode: "&#10026;",
  ),
  circledOpenCentreEightPointedStar(
    id: "circled_open_centre_eight_pointed_star",
    name: "Circled Open Centre Eight Pointed Star",
    symbol: "❂",
    code: 0x2742,
    altCode: "&#x2742;",
    htmlCode: "&#10050;",
  ),
  shadowedWhiteCircle(
    id: "shadowed_white_circle",
    name: "Shadowed White Circle",
    symbol: "❍",
    code: 0x274D,
    altCode: "&#x274D;",
    htmlCode: "&#10061;",
  ),
  upTackWithCircleAbove(
    id: "up_tack_with_circle_above",
    name: "Up Tack With Circle Above",
    symbol: "⟟",
    code: 0x27DF,
    altCode: "&#x27DF;",
    htmlCode: "&#10207;",
  ),
  emptySetWithSmallCircleAbove(
    id: "empty_set_with_small_circle_above",
    name: "Empty Set With Small Circle Above",
    symbol: "⦲",
    code: 0x29B2,
    altCode: "&#x29B2;",
    htmlCode: "&#10674;",
  ),
  circleWithHorizontalBar(
    id: "circle_with_horizontal_bar",
    name: "Circle With Horizontal Bar",
    symbol: "⦵",
    code: 0x29B5,
    altCode: "&#x29B5;",
    htmlCode: "&#10677;",
  ),
  circledVerticalBar(
    id: "circled_vertical_bar",
    name: "Circled Vertical Bar",
    symbol: "⦶",
    code: 0x29B6,
    altCode: "&#x29B6;",
    htmlCode: "&#10678;",
  ),
  circledParallel(
    id: "circled_parallel",
    name: "Circled Parallel",
    symbol: "⦷",
    code: 0x29B7,
    altCode: "&#x29B7;",
    htmlCode: "&#10679;",
  ),
  circledReverseSolidus(
    id: "circled_reverse_solidus",
    name: "Circled Reverse Solidus",
    symbol: "⦸",
    code: 0x29B8,
    altCode: "&#x29B8;",
    htmlCode: "&#10680;",
  ),
  circledPerpendicular(
    id: "circled_perpendicular",
    name: "Circled Perpendicular",
    symbol: "⦹",
    code: 0x29B9,
    altCode: "&#x29B9;",
    htmlCode: "&#10681;",
  ),
  circleDividedByHorizontalBarAndTopHalfDividedByVerticalBar(
    id: "circle_divided_by_horizontal_bar_and_top_half_divided_by_vertical_bar",
    name:
        "Circle Divided By Horizontal Bar And Top Half Divided By Vertical Bar",
    symbol: "⦺",
    code: 0x29BA,
    altCode: "&#x29BA;",
    htmlCode: "&#10682;",
  ),
  circleWithSuperimposedX(
    id: "circle_with_superimposed_x",
    name: "Circle With Superimposed X",
    symbol: "⦻",
    code: 0x29BB,
    altCode: "&#x29BB;",
    htmlCode: "&#10683;",
  ),
  circledWhiteBullet(
    id: "circled_white_bullet",
    name: "Circled White Bullet",
    symbol: "⦾",
    code: 0x29BE,
    altCode: "&#x29BE;",
    htmlCode: "&#10686;",
  ),
  circledBullet(
    id: "circled_bullet",
    name: "Circled Bullet",
    symbol: "⦿",
    code: 0x29BF,
    altCode: "&#x29BF;",
    htmlCode: "&#10687;",
  ),
  circleWithSmallCircleToTheRight(
    id: "circle_with_small_circle_to_the_right",
    name: "Circle With Small Circle To The Right",
    symbol: "⧂",
    code: 0x29C2,
    altCode: "&#x29C2;",
    htmlCode: "&#10690;",
  ),
  circleWithTwoHorizontalStrokesToTheRight(
    id: "circle_with_two_horizontal_strokes_to_the_right",
    name: "Circle With Two Horizontal Strokes To The Right",
    symbol: "⧃",
    code: 0x29C3,
    altCode: "&#x29C3;",
    htmlCode: "&#10691;",
  ),
  squaredSmallCircle(
    id: "squared_small_circle",
    name: "Squared Small Circle",
    symbol: "⧇",
    code: 0x29C7,
    altCode: "&#x29C7;",
    htmlCode: "&#10695;",
  ),
  errorBarredWhiteCircle(
    id: "error_barred_white_circle",
    name: "Error-barred White Circle",
    symbol: "⧲",
    code: 0x29F2,
    altCode: "&#x29F2;",
    htmlCode: "&#10738;",
  ),
  errorBarredBlackCircle(
    id: "error_barred_black_circle",
    name: "Error-barred Black Circle",
    symbol: "⧳",
    code: 0x29F3,
    altCode: "&#x29F3;",
    htmlCode: "&#10739;",
  ),
  nAryCircledDotOperator(
    id: "n_ary_circled_dot_operator",
    name: "N-ary Circled Dot Operator",
    symbol: "⨀",
    code: 0x2A00,
    altCode: "&#x2A00;",
    htmlCode: "&#10752;",
  ),
  nAryCircledPlusOperator(
    id: "n_ary_circled_plus_operator",
    name: "N-ary Circled Plus Operator",
    symbol: "⨁",
    code: 0x2A01,
    altCode: "&#x2A01;",
    htmlCode: "&#10753;",
  ),
  nAryCircledTimesOperator(
    id: "n_ary_circled_times_operator",
    name: "N-ary Circled Times Operator",
    symbol: "⨂",
    code: 0x2A02,
    altCode: "&#x2A02;",
    htmlCode: "&#10754;",
  ),
  downTackWithCircleBelow(
    id: "down_tack_with_circle_below",
    name: "Down Tack With Circle Below",
    symbol: "⫱",
    code: 0x2AF1,
    altCode: "&#x2AF1;",
    htmlCode: "&#10993;",
  ),
  blackLargeCircle(
    id: "black_large_circle",
    name: "Black Large Circle",
    symbol: "⬤",
    code: 0x2B24,
    altCode: "&#x2B24;",
    htmlCode: "&#11044;",
  ),
  heavyLargeCircle(
    id: "heavy_large_circle",
    name: "Heavy Large Circle",
    symbol: "⭕",
    code: 0x2B55,
    altCode: "&#x2B55;",
    htmlCode: "&#11093;",
  ),
  blackUpPointingTriangle(
    id: "black_up_pointing_triangle",
    name: "Black Up-pointing Triangle",
    symbol: "▲",
    code: 0x25B2,
    altCode: "&#x25B2;",
    htmlCode: "&#9650;",
  ),
  whiteUpPointingTriangle(
    id: "white_up_pointing_triangle",
    name: "White Up-pointing Triangle",
    symbol: "△",
    code: 0x25B3,
    altCode: "&#x25B3;",
    htmlCode: "&#9651;",
  ),
  blackUpPointingSmallTriangle(
    id: "black_up_pointing_small_triangle",
    name: "Black Up-pointing Small Triangle",
    symbol: "▴",
    code: 0x25B4,
    altCode: "&#x25B4;",
    htmlCode: "&#9652;",
  ),
  whiteUpPointingSmallTriangle(
    id: "white_up_pointing_small_triangle",
    name: "White Up-pointing Small Triangle",
    symbol: "▵",
    code: 0x25B5,
    altCode: "&#x25B5;",
    htmlCode: "&#9653;",
  ),
  blackRightPointingTriangle(
    id: "black_right_pointing_triangle",
    name: "Black Right-pointing Triangle",
    symbol: "▶",
    code: 0x25B6,
    altCode: "&#x25B6;",
    htmlCode: "&#9654;",
  ),
  whiteRightPointingTriangle(
    id: "white_right_pointing_triangle",
    name: "White Right-pointing Triangle",
    symbol: "▷",
    code: 0x25B7,
    altCode: "&#x25B7;",
    htmlCode: "&#9655;",
  ),
  blackRightPointingSmallTriangle(
    id: "black_right_pointing_small_triangle",
    name: "Black Right-pointing Small Triangle",
    symbol: "▸",
    code: 0x25B8,
    altCode: "&#x25B8;",
    htmlCode: "&#9656;",
  ),
  whiteRightPointingSmallTriangle(
    id: "white_right_pointing_small_triangle",
    name: "White Right-pointing Small Triangle",
    symbol: "▹",
    code: 0x25B9,
    altCode: "&#x25B9;",
    htmlCode: "&#9657;",
  ),
  blackDownPointingTriangle(
    id: "black_down_pointing_triangle",
    name: "Black Down-pointing Triangle",
    symbol: "▼",
    code: 0x25BC,
    altCode: "&#x25BC;",
    htmlCode: "&#9660;",
  ),
  whiteDownPointingTriangle(
    id: "white_down_pointing_triangle",
    name: "White Down-pointing Triangle",
    symbol: "▽",
    code: 0x25BD,
    altCode: "&#x25BD;",
    htmlCode: "&#9661;",
  ),
  blackDownPointingSmallTriangle(
    id: "black_down_pointing_small_triangle",
    name: "Black Down-pointing Small Triangle",
    symbol: "▾",
    code: 0x25BE,
    altCode: "&#x25BE;",
    htmlCode: "&#9662;",
  ),
  whiteDownPointingSmallTriangle(
    id: "white_down_pointing_small_triangle",
    name: "White Down-pointing Small Triangle",
    symbol: "▿",
    code: 0x25BF,
    altCode: "&#x25BF;",
    htmlCode: "&#9663;",
  ),
  blackLeftPointingTriangle(
    id: "black_left_pointing_triangle",
    name: "Black Left-pointing Triangle",
    symbol: "◀",
    code: 0x25C0,
    altCode: "&#x25C0;",
    htmlCode: "&#9664;",
  ),
  whiteLeftPointingTriangle(
    id: "white_left_pointing_triangle",
    name: "White Left-pointing Triangle",
    symbol: "◁",
    code: 0x25C1,
    altCode: "&#x25C1;",
    htmlCode: "&#9665;",
  ),
  blackLeftPointingSmallTriangle(
    id: "black_left_pointing_small_triangle",
    name: "Black Left-pointing Small Triangle",
    symbol: "◂",
    code: 0x25C2,
    altCode: "&#x25C2;",
    htmlCode: "&#9666;",
  ),
  whiteLeftPointingSmallTriangle(
    id: "white_left_pointing_small_triangle",
    name: "White Left-pointing Small Triangle",
    symbol: "◃",
    code: 0x25C3,
    altCode: "&#x25C3;",
    htmlCode: "&#9667;",
  ),
  blackLowerRightTriangle(
    id: "black_lower_right_triangle",
    name: "Black Lower Right Triangle",
    symbol: "◢",
    code: 0x25E2,
    altCode: "&#x25E2;",
    htmlCode: "&#9698;",
  ),
  blackLowerLeftTriangle(
    id: "black_lower_left_triangle",
    name: "Black Lower Left Triangle",
    symbol: "◣",
    code: 0x25E3,
    altCode: "&#x25E3;",
    htmlCode: "&#9699;",
  ),
  blackUpperLeftTriangle(
    id: "black_upper_left_triangle",
    name: "Black Upper Left Triangle",
    symbol: "◤",
    code: 0x25E4,
    altCode: "&#x25E4;",
    htmlCode: "&#9700;",
  ),
  blackUpperRightTriangle(
    id: "black_upper_right_triangle",
    name: "Black Upper Right Triangle",
    symbol: "◥",
    code: 0x25E5,
    altCode: "&#x25E5;",
    htmlCode: "&#9701;",
  ),
  whiteUpPointingTriangleWithDot(
    id: "white_up_pointing_triangle_with_dot",
    name: "White Up-pointing Triangle With Dot",
    symbol: "◬",
    code: 0x25EC,
    altCode: "&#x25EC;",
    htmlCode: "&#9708;",
  ),
  upPointingTriangleWithLeftHalfBlack(
    id: "up_pointing_triangle_with_left_half_black",
    name: "Up-pointing Triangle With Left Half Black",
    symbol: "◭",
    code: 0x25ED,
    altCode: "&#x25ED;",
    htmlCode: "&#9709;",
  ),
  upPointingTriangleWithRightHalfBlack(
    id: "up_pointing_triangle_with_right_half_black",
    name: "Up-pointing Triangle With Right Half Black",
    symbol: "◮",
    code: 0x25EE,
    altCode: "&#x25EE;",
    htmlCode: "&#9710;",
  ),
  upperLeftTriangle(
    id: "upper_left_triangle",
    name: "Upper Left Triangle",
    symbol: "◸",
    code: 0x25F8,
    altCode: "&#x25F8;",
    htmlCode: "&#9720;",
  ),
  upperRightTriangle(
    id: "upper_right_triangle",
    name: "Upper Right Triangle",
    symbol: "◹",
    code: 0x25F9,
    altCode: "&#x25F9;",
    htmlCode: "&#9721;",
  ),
  lowerLeftTriangle(
    id: "lower_left_triangle",
    name: "Lower Left Triangle",
    symbol: "◺",
    code: 0x25FA,
    altCode: "&#x25FA;",
    htmlCode: "&#9722;",
  ),
  lowerRightTriangle(
    id: "lower_right_triangle",
    name: "Lower Right Triangle",
    symbol: "◿",
    code: 0x25FF,
    altCode: "&#x25FF;",
    htmlCode: "&#9727;",
  ),
  heavyWhiteDownPointingTriangle(
    id: "heavy_white_down_pointing_triangle",
    name: "Heavy White Down-pointing Triangle",
    symbol: "⛛",
    code: 0x26DB,
    altCode: "&#x26DB;",
    htmlCode: "&#9947;",
  ),
  whiteTriangleContainingSmallWhiteTriangle(
    id: "white_triangle_containing_small_white_triangle",
    name: "White Triangle Containing Small White Triangle",
    symbol: "⟁",
    code: 0x27C1,
    altCode: "&#x27C1;",
    htmlCode: "&#10177;",
  ),
  triangleWithDotAbove(
    id: "triangle_with_dot_above",
    name: "Triangle With Dot Above",
    symbol: "⧊",
    code: 0x29CA,
    altCode: "&#x29CA;",
    htmlCode: "&#10698;",
  ),
  triangleWithUnderbar(
    id: "triangle_with_underbar",
    name: "Triangle With Underbar",
    symbol: "⧋",
    code: 0x29CB,
    altCode: "&#x29CB;",
    htmlCode: "&#10699;",
  ),
  sInTriangle(
    id: "s_in_triangle",
    name: "S In Triangle",
    symbol: "⧌",
    code: 0x29CC,
    altCode: "&#x29CC;",
    htmlCode: "&#10700;",
  ),
  triangleWithSerifsAtBottom(
    id: "triangle_with_serifs_at_bottom",
    name: "Triangle With Serifs At Bottom",
    symbol: "⧍",
    code: 0x29CD,
    altCode: "&#x29CD;",
    htmlCode: "&#10701;",
  ),
  rightTriangleAboveLeftTriangle(
    id: "right_triangle_above_left_triangle",
    name: "Right Triangle Above Left Triangle",
    symbol: "⧎",
    code: 0x29CE,
    altCode: "&#x29CE;",
    htmlCode: "&#10702;",
  ),
  leftTriangleBesideVerticalBar(
    id: "left_triangle_beside_vertical_bar",
    name: "Left Triangle Beside Vertical Bar",
    symbol: "⧏",
    code: 0x29CF,
    altCode: "&#x29CF;",
    htmlCode: "&#10703;",
  ),
  verticalBarBesideRightTriangle(
    id: "vertical_bar_beside_right_triangle",
    name: "Vertical Bar Beside Right Triangle",
    symbol: "⧐",
    code: 0x29D0,
    altCode: "&#x29D0;",
    htmlCode: "&#10704;",
  ),
  downPointingTriangleWithLeftHalfBlack(
    id: "down_pointing_triangle_with_left_half_black",
    name: "Down-pointing Triangle With Left Half Black",
    symbol: "⧨",
    code: 0x29E8,
    altCode: "&#x29E8;",
    htmlCode: "&#10728;",
  ),
  downPointingTriangleWithRightHalfBlack(
    id: "down_pointing_triangle_with_right_half_black",
    name: "Down-pointing Triangle With Right Half Black",
    symbol: "⧩",
    code: 0x29E9,
    altCode: "&#x29E9;",
    htmlCode: "&#10729;",
  ),
  largeLeftTriangleOperator(
    id: "large_left_triangle_operator",
    name: "Large Left Triangle Operator",
    symbol: "⨞",
    code: 0x2A1E,
    altCode: "&#x2A1E;",
    htmlCode: "&#10782;",
  ),
  plusSignWithBlackTriangle(
    id: "plus_sign_with_black_triangle",
    name: "Plus Sign With Black Triangle",
    symbol: "⨨",
    code: 0x2A28,
    altCode: "&#x2A28;",
    htmlCode: "&#10792;",
  ),
  plusSignInTriangle(
    id: "plus_sign_in_triangle",
    name: "Plus Sign In Triangle",
    symbol: "⨹",
    code: 0x2A39,
    altCode: "&#x2A39;",
    htmlCode: "&#10809;",
  ),
  minusSignInTriangle(
    id: "minus_sign_in_triangle",
    name: "Minus Sign In Triangle",
    symbol: "⨺",
    code: 0x2A3A,
    altCode: "&#x2A3A;",
    htmlCode: "&#10810;",
  ),
  multiplicationSignInTriangle(
    id: "multiplication_sign_in_triangle",
    name: "Multiplication Sign In Triangle",
    symbol: "⨻",
    code: 0x2A3B,
    altCode: "&#x2A3B;",
    htmlCode: "&#10811;",
  ),
  blackSquare(
    id: "black_square",
    name: "Black Square",
    symbol: "■",
    code: 0x25A0,
    altCode: "&#x25A0;",
    htmlCode: "&#9632;",
  ),
  whiteSquare(
    id: "white_square",
    name: "White Square",
    symbol: "□",
    code: 0x25A1,
    altCode: "&#x25A1;",
    htmlCode: "&#9633;",
  ),
  whiteSquareWithRoundedCorners(
    id: "white_square_with_rounded_corners",
    name: "White Square With Rounded Corners",
    symbol: "▢",
    code: 0x25A2,
    altCode: "&#x25A2;",
    htmlCode: "&#9634;",
  ),
  whiteSquareContainingBlackSmallSquare(
    id: "white_square_containing_black_small_square",
    name: "White Square Containing Black Small Square",
    symbol: "▣",
    code: 0x25A3,
    altCode: "&#x25A3;",
    htmlCode: "&#9635;",
  ),
  squareWithHorizontalFill(
    id: "square_with_horizontal_fill",
    name: "Square With Horizontal Fill",
    symbol: "▤",
    code: 0x25A4,
    altCode: "&#x25A4;",
    htmlCode: "&#9636;",
  ),
  squareWithVerticalFill(
    id: "square_with_vertical_fill",
    name: "Square With Vertical Fill",
    symbol: "▥",
    code: 0x25A5,
    altCode: "&#x25A5;",
    htmlCode: "&#9637;",
  ),
  squareWithOrthogonalCrosshatchFill(
    id: "square_with_orthogonal_crosshatch_fill",
    name: "Square With Orthogonal Crosshatch Fill",
    symbol: "▦",
    code: 0x25A6,
    altCode: "&#x25A6;",
    htmlCode: "&#9638;",
  ),
  squareWithUpperLeftToLowerRightFill(
    id: "square_with_upper_left_to_lower_right_fill",
    name: "Square With Upper Left To Lower Right Fill",
    symbol: "▧",
    code: 0x25A7,
    altCode: "&#x25A7;",
    htmlCode: "&#9639;",
  ),
  squareWithUpperRightToLowerLeftFill(
    id: "square_with_upper_right_to_lower_left_fill",
    name: "Square With Upper Right To Lower Left Fill",
    symbol: "▨",
    code: 0x25A8,
    altCode: "&#x25A8;",
    htmlCode: "&#9640;",
  ),
  squareWithDiagonalCrosshatchFill(
    id: "square_with_diagonal_crosshatch_fill",
    name: "Square With Diagonal Crosshatch Fill",
    symbol: "▩",
    code: 0x25A9,
    altCode: "&#x25A9;",
    htmlCode: "&#9641;",
  ),
  blackSmallSquare(
    id: "black_small_square",
    name: "Black Small Square",
    symbol: "▪",
    code: 0x25AA,
    altCode: "&#x25AA;",
    htmlCode: "&#9642;",
  ),
  whiteSmallSquare(
    id: "white_small_square",
    name: "White Small Square",
    symbol: "▫",
    code: 0x25AB,
    altCode: "&#x25AB;",
    htmlCode: "&#9643;",
  ),
  squareWithLeftHalfBlack(
    id: "square_with_left_half_black",
    name: "Square With Left Half Black",
    symbol: "◧",
    code: 0x25E7,
    altCode: "&#x25E7;",
    htmlCode: "&#9703;",
  ),
  squareWithRightHalfBlack(
    id: "square_with_right_half_black",
    name: "Square With Right Half Black",
    symbol: "◨",
    code: 0x25E8,
    altCode: "&#x25E8;",
    htmlCode: "&#9704;",
  ),
  squareWithUpperLeftDiagonalHalfBlack(
    id: "square_with_upper_left_diagonal_half_black",
    name: "Square With Upper Left Diagonal Half Black",
    symbol: "◩",
    code: 0x25E9,
    altCode: "&#x25E9;",
    htmlCode: "&#9705;",
  ),
  squareWithLowerRightDiagonalHalfBlack(
    id: "square_with_lower_right_diagonal_half_black",
    name: "Square With Lower Right Diagonal Half Black",
    symbol: "◪",
    code: 0x25EA,
    altCode: "&#x25EA;",
    htmlCode: "&#9706;",
  ),
  whiteSquareWithVerticalBisectingLine(
    id: "white_square_with_vertical_bisecting_line",
    name: "White Square With Vertical Bisecting Line",
    symbol: "◫",
    code: 0x25EB,
    altCode: "&#x25EB;",
    htmlCode: "&#9707;",
  ),
  whiteSquareWithUpperLeftQuadrant(
    id: "white_square_with_upper_left_quadrant",
    name: "White Square With Upper Left Quadrant",
    symbol: "◰",
    code: 0x25F0,
    altCode: "&#x25F0;",
    htmlCode: "&#9712;",
  ),
  whiteSquareWithLowerLeftQuadrant(
    id: "white_square_with_lower_left_quadrant",
    name: "White Square With Lower Left Quadrant",
    symbol: "◱",
    code: 0x25F1,
    altCode: "&#x25F1;",
    htmlCode: "&#9713;",
  ),
  whiteSquareWithLowerRightQuadrant(
    id: "white_square_with_lower_right_quadrant",
    name: "White Square With Lower Right Quadrant",
    symbol: "◲",
    code: 0x25F2,
    altCode: "&#x25F2;",
    htmlCode: "&#9714;",
  ),
  whiteSquareWithUpperRightQuadrant(
    id: "white_square_with_upper_right_quadrant",
    name: "White Square With Upper Right Quadrant",
    symbol: "◳",
    code: 0x25F3,
    altCode: "&#x25F3;",
    htmlCode: "&#9715;",
  ),
  whiteMediumSquare(
    id: "white_medium_square",
    name: "White Medium Square",
    symbol: "◻",
    code: 0x25FB,
    altCode: "&#x25FB;",
    htmlCode: "&#9723;",
  ),
  blackMediumSquare(
    id: "black_medium_square",
    name: "Black Medium Square",
    symbol: "◼",
    code: 0x25FC,
    altCode: "&#x25FC;",
    htmlCode: "&#9724;",
  ),
  whiteMediumSmallSquare(
    id: "white_medium_small_square",
    name: "White Medium Small Square",
    symbol: "◽",
    code: 0x25FD,
    altCode: "&#x25FD;",
    htmlCode: "&#9725;",
  ),
  blackMediumSmallSquare(
    id: "black_medium_small_square",
    name: "Black Medium Small Square",
    symbol: "◾",
    code: 0x25FE,
    altCode: "&#x25FE;",
    htmlCode: "&#9726;",
  ),
  squaredKey(
    id: "squared_key",
    name: "Squared Key",
    symbol: "⚿",
    code: 0x26BF,
    altCode: "&#x26BF;",
    htmlCode: "&#9919;",
  ),
  whiteDiamondInSquare(
    id: "white_diamond_in_square",
    name: "White Diamond In Square",
    symbol: "⛋",
    code: 0x26CB,
    altCode: "&#x26CB;",
    htmlCode: "&#9931;",
  ),
  squaredSaltire(
    id: "squared_saltire",
    name: "Squared Saltire",
    symbol: "⛝",
    code: 0x26DD,
    altCode: "&#x26DD;",
    htmlCode: "&#9949;",
  ),
  fallingDiagonalInWhiteCircleInBlackSquare(
    id: "falling_diagonal_in_white_circle_in_black_square",
    name: "Falling Diagonal In White Circle In Black Square",
    symbol: "⛞",
    code: 0x26DE,
    altCode: "&#x26DE;",
    htmlCode: "&#9950;",
  ),
  squareFourCorners(
    id: "square_four_corners",
    name: "Square Four Corners",
    symbol: "⛶",
    code: 0x26F6,
    altCode: "&#x26F6;",
    htmlCode: "&#9974;",
  ),
  cupOnBlackSquare(
    id: "cup_on_black_square",
    name: "Cup On Black Square",
    symbol: "⛾",
    code: 0x26FE,
    altCode: "&#x26FE;",
    htmlCode: "&#9982;",
  ),
  lowerRightDropShadowedWhiteSquare(
    id: "lower_right_drop_shadowed_white_square",
    name: "Lower Right Drop-shadowed White Square",
    symbol: "❏",
    code: 0x274F,
    altCode: "&#x274F;",
    htmlCode: "&#10063;",
  ),
  upperRightDropShadowedWhiteSquare(
    id: "upper_right_drop_shadowed_white_square",
    name: "Upper Right Drop-shadowed White Square",
    symbol: "❐",
    code: 0x2750,
    altCode: "&#x2750;",
    htmlCode: "&#10064;",
  ),
  lowerRightShadowedWhiteSquare(
    id: "lower_right_shadowed_white_square",
    name: "Lower Right Shadowed White Square",
    symbol: "❑",
    code: 0x2751,
    altCode: "&#x2751;",
    htmlCode: "&#10065;",
  ),
  upperRightShadowedWhiteSquare(
    id: "upper_right_shadowed_white_square",
    name: "Upper Right Shadowed White Square",
    symbol: "❒",
    code: 0x2752,
    altCode: "&#x2752;",
    htmlCode: "&#10066;",
  ),
  squaredLogicalAnd(
    id: "squared_logical_and",
    name: "Squared Logical And",
    symbol: "⟎",
    code: 0x27CE,
    altCode: "&#x27CE;",
    htmlCode: "&#10190;",
  ),
  squaredLogicalOr(
    id: "squared_logical_or",
    name: "Squared Logical Or",
    symbol: "⟏",
    code: 0x27CF,
    altCode: "&#x27CF;",
    htmlCode: "&#10191;",
  ),
  whiteSquareWithLeftwardsTick(
    id: "white_square_with_leftwards_tick",
    name: "White Square With Leftwards Tick",
    symbol: "⟤",
    code: 0x27E4,
    altCode: "&#x27E4;",
    htmlCode: "&#10212;",
  ),
  whiteSquareWithRightwardsTick(
    id: "white_square_with_rightwards_tick",
    name: "White Square With Rightwards Tick",
    symbol: "⟥",
    code: 0x27E5,
    altCode: "&#x27E5;",
    htmlCode: "&#10213;",
  ),
  squaredRisingDiagonalSlash(
    id: "squared_rising_diagonal_slash",
    name: "Squared Rising Diagonal Slash",
    symbol: "⧄",
    code: 0x29C4,
    altCode: "&#x29C4;",
    htmlCode: "&#10692;",
  ),
  squaredFallingDiagonalSlash(
    id: "squared_falling_diagonal_slash",
    name: "Squared Falling Diagonal Slash",
    symbol: "⧅",
    code: 0x29C5,
    altCode: "&#x29C5;",
    htmlCode: "&#10693;",
  ),
  squaredAsterisk(
    id: "squared_asterisk",
    name: "Squared Asterisk",
    symbol: "⧆",
    code: 0x29C6,
    altCode: "&#x29C6;",
    htmlCode: "&#10694;",
  ),
  squaredSquare(
    id: "squared_square",
    name: "Squared Square",
    symbol: "⧈",
    code: 0x29C8,
    altCode: "&#x29C8;",
    htmlCode: "&#10696;",
  ),
  twoJoinedSquares(
    id: "two_joined_squares",
    name: "Two Joined Squares",
    symbol: "⧉",
    code: 0x29C9,
    altCode: "&#x29C9;",
    htmlCode: "&#10697;",
  ),
  squareWithContouredOutline(
    id: "square_with_contoured_outline",
    name: "Square With Contoured Outline",
    symbol: "⧠",
    code: 0x29E0,
    altCode: "&#x29E0;",
    htmlCode: "&#10720;",
  ),
  errorBarredWhiteSquare(
    id: "error_barred_white_square",
    name: "Error-barred White Square",
    symbol: "⧮",
    code: 0x29EE,
    altCode: "&#x29EE;",
    htmlCode: "&#10734;",
  ),
  errorBarredBlackSquare(
    id: "error_barred_black_square",
    name: "Error-barred Black Square",
    symbol: "⧯",
    code: 0x29EF,
    altCode: "&#x29EF;",
    htmlCode: "&#10735;",
  ),
  squareWithTopHalfBlack(
    id: "square_with_top_half_black",
    name: "Square With Top Half Black",
    symbol: "⬒",
    code: 0x2B12,
    altCode: "&#x2B12;",
    htmlCode: "&#11026;",
  ),
  squareWithBottomHalfBlack(
    id: "square_with_bottom_half_black",
    name: "Square With Bottom Half Black",
    symbol: "⬓",
    code: 0x2B13,
    altCode: "&#x2B13;",
    htmlCode: "&#11027;",
  ),
  squareWithUpperRightDiagonalHalfBlack(
    id: "square_with_upper_right_diagonal_half_black",
    name: "Square With Upper Right Diagonal Half Black",
    symbol: "⬔",
    code: 0x2B14,
    altCode: "&#x2B14;",
    htmlCode: "&#11028;",
  ),
  squareWithLowerLeftDiagonalHalfBlack(
    id: "square_with_lower_left_diagonal_half_black",
    name: "Square With Lower Left Diagonal Half Black",
    symbol: "⬕",
    code: 0x2B15,
    altCode: "&#x2B15;",
    htmlCode: "&#11029;",
  ),
  dottedSquare(
    id: "dotted_square",
    name: "Dotted Square",
    symbol: "⬚",
    code: 0x2B1A,
    altCode: "&#x2B1A;",
    htmlCode: "&#11034;",
  ),
  blackLargeSquare(
    id: "black_large_square",
    name: "Black Large Square",
    symbol: "⬛",
    code: 0x2B1B,
    altCode: "&#x2B1B;",
    htmlCode: "&#11035;",
  ),
  whiteLargeSquare(
    id: "white_large_square",
    name: "White Large Square",
    symbol: "⬜",
    code: 0x2B1C,
    altCode: "&#x2B1C;",
    htmlCode: "&#11036;",
  ),
  blackVerySmallSquare(
    id: "black_very_small_square",
    name: "Black Very Small Square",
    symbol: "⬝",
    code: 0x2B1D,
    altCode: "&#x2B1D;",
    htmlCode: "&#11037;",
  ),
  whiteVerySmallSquare(
    id: "white_very_small_square",
    name: "White Very Small Square",
    symbol: "⬞",
    code: 0x2B1E,
    altCode: "&#x2B1E;",
    htmlCode: "&#11038;",
  ),
  blackSquareCentred(
    id: "black_square_centred",
    name: "Black Square Centred",
    symbol: "⯀",
    code: 0x2BC0,
    altCode: "&#x2BC0;",
    htmlCode: "&#11200;",
  ),
  squarePositionIndicator(
    id: "square_position_indicator",
    name: "Square Position Indicator",
    symbol: "⯐",
    code: 0x2BD0,
    altCode: "&#x2BD0;",
    htmlCode: "&#11216;",
  ),
  blackRectangle(
    id: "black_rectangle",
    name: "Black Rectangle",
    symbol: "▬",
    code: 0x25AC,
    altCode: "&#x25AC;",
    htmlCode: "&#9644;",
  ),
  whiteRectangle(
    id: "white_rectangle",
    name: "White Rectangle",
    symbol: "▭",
    code: 0x25AD,
    altCode: "&#x25AD;",
    htmlCode: "&#9645;",
  ),
  blackVerticalRectangle(
    id: "black_vertical_rectangle",
    name: "Black Vertical Rectangle",
    symbol: "▮",
    code: 0x25AE,
    altCode: "&#x25AE;",
    htmlCode: "&#9646;",
  ),
  whiteVerticalRectangle(
    id: "white_vertical_rectangle",
    name: "White Vertical Rectangle",
    symbol: "▯",
    code: 0x25AF,
    altCode: "&#x25AF;",
    htmlCode: "&#9647;",
  ),
  blackPentagon(
    id: "black_pentagon",
    name: "Black Pentagon",
    symbol: "⬟",
    code: 0x2B1F,
    altCode: "&#x2B1F;",
    htmlCode: "&#11039;",
  ),
  whitePentagon(
    id: "white_pentagon",
    name: "White Pentagon",
    symbol: "⬠",
    code: 0x2B20,
    altCode: "&#x2B20;",
    htmlCode: "&#11040;",
  ),
  blackRightPointingPentagon(
    id: "black_right_pointing_pentagon",
    name: "Black Right-pointing Pentagon",
    symbol: "⭓",
    code: 0x2B53,
    altCode: "&#x2B53;",
    htmlCode: "&#11091;",
  ),
  whiteRightPointingPentagon(
    id: "white_right_pointing_pentagon",
    name: "White Right-pointing Pentagon",
    symbol: "⭔",
    code: 0x2B54,
    altCode: "&#x2B54;",
    htmlCode: "&#11092;",
  ),
  turnedBlackPentagon(
    id: "turned_black_pentagon",
    name: "Turned Black Pentagon",
    symbol: "⯂",
    code: 0x2BC2,
    altCode: "&#x2BC2;",
    htmlCode: "&#11202;",
  ),
  whiteHexagon(
    id: "white_hexagon",
    name: "White Hexagon",
    symbol: "⬡",
    code: 0x2B21,
    altCode: "&#x2B21;",
    htmlCode: "&#11041;",
  ),
  blackHexagon(
    id: "black_hexagon",
    name: "Black Hexagon",
    symbol: "⬢",
    code: 0x2B22,
    altCode: "&#x2B22;",
    htmlCode: "&#11042;",
  ),
  horizontalBlackHexagon(
    id: "horizontal_black_hexagon",
    name: "Horizontal Black Hexagon",
    symbol: "⬣",
    code: 0x2B23,
    altCode: "&#x2B23;",
    htmlCode: "&#11043;",
  ),
  leftBarbUpRightBarbDown(
    id: "left_barb_up_right_barb_down",
    name: "Left Barb Up Right Barb Down Harpoon",
    symbol: "⥊",
    code: 0x294A,
    altCode: "&#x294A;",
    htmlCode: "&#10570;",
  ),
  leftBarbDownRightBarbUp(
    id: "left_barb_down_right_barb_up",
    name: "Left Barb Down Right Barb Up Harpoon",
    symbol: "⥋",
    code: 0x294B,
    altCode: "&#x294B;",
    htmlCode: "&#10571;",
  ),
  upBarbRightDownBarbLeft(
    id: "up_barb_right_down_barb_left",
    name: "Up Barb Right Down Barb Left Harpoon",
    symbol: "⥌",
    code: 0x294C,
    altCode: "&#x294C;",
    htmlCode: "&#10572;",
  ),
  upBarbLeftDownBarbRight(
    id: "up_barb_left_down_barb_right",
    name: "Up Barb Left Down Barb Right Harpoon",
    symbol: "⥍",
    code: 0x294D,
    altCode: "&#x294D;",
    htmlCode: "&#10573;",
  ),
  leftBarbUpRightBarbUp(
    id: "left_barb_up_right_barb_up",
    name: "Left Barb Up Right Barb Up Harpoon",
    symbol: "⥎",
    code: 0x294E,
    altCode: "&#x294E;",
    htmlCode: "&#10574;",
  ),
  upBarbRightDownBarbRight(
    id: "up_barb_right_down_barb_right",
    name: "Up Barb Right Down Barb Right Harpoon",
    symbol: "⥏",
    code: 0x294F,
    altCode: "&#x294F;",
    htmlCode: "&#10575;",
  ),
  leftBarbDownRightBarbDown(
    id: "left_barb_down_right_barb_down",
    name: "Left Barb Down Right Barb Down Harpoon",
    symbol: "⥐",
    code: 0x2950,
    altCode: "&#x2950;",
    htmlCode: "&#10576;",
  ),
  upBarbLeftDownBarbLeft(
    id: "up_barb_left_down_barb_left",
    name: "Up Barb Left Down Barb Left Harpoon",
    symbol: "⥑",
    code: 0x2951,
    altCode: "&#x2951;",
    htmlCode: "&#10577;",
  ),
  leftwardsHarpoonWithBarbUpToBar(
    id: "leftwards_harpoon_with_barb_up_to_bar",
    name: "Leftwards Harpoon With Barb Up To Bar",
    symbol: "⥒",
    code: 0x2952,
    altCode: "&#x2952;",
    htmlCode: "&#10578;",
  ),
  rightwardsHarpoonWithBarbUpToBar(
    id: "rightwards_harpoon_with_barb_up_to_bar",
    name: "Rightwards Harpoon With Barb Up To Bar",
    symbol: "⥓",
    code: 0x2953,
    altCode: "&#x2953;",
    htmlCode: "&#10579;",
  ),
  upwardsHarpoonWithBarbRightToBar(
    id: "upwards_harpoon_with_barb_right_to_bar",
    name: "Upwards Harpoon With Barb Right To Bar",
    symbol: "⥔",
    code: 0x2954,
    altCode: "&#x2954;",
    htmlCode: "&#10580;",
  ),
  downwardsHarpoonWithBarbRightToBar(
    id: "downwards_harpoon_with_barb_right_to_bar",
    name: "Downwards Harpoon With Barb Right To Bar",
    symbol: "⥕",
    code: 0x2955,
    altCode: "&#x2955;",
    htmlCode: "&#10581;",
  ),
  leftwardsHarpoonWithBarbDownToBar(
    id: "leftwards_harpoon_with_barb_down_to_bar",
    name: "Leftwards Harpoon With Barb Down To Bar",
    symbol: "⥖",
    code: 0x2956,
    altCode: "&#x2956;",
    htmlCode: "&#10582;",
  ),
  rightwardsHarpoonWithBarbDownToBar(
    id: "rightwards_harpoon_with_barb_down_to_bar",
    name: "Rightwards Harpoon With Barb Down To Bar",
    symbol: "⥗",
    code: 0x2957,
    altCode: "&#x2957;",
    htmlCode: "&#10583;",
  ),
  upwardsHarpoonWithBarbLeftToBar(
    id: "upwards_harpoon_with_barb_left_to_bar",
    name: "Upwards Harpoon With Barb Left To Bar",
    symbol: "⥘",
    code: 0x2958,
    altCode: "&#x2958;",
    htmlCode: "&#10584;",
  ),
  downwardsHarpoonWithBarbLeftToBar(
    id: "downwards_harpoon_with_barb_left_to_bar",
    name: "Downwards Harpoon With Barb Left To Bar",
    symbol: "⥙",
    code: 0x2959,
    altCode: "&#x2959;",
    htmlCode: "&#10585;",
  ),
  leftwardsHarpoonWithBarbUpFromBar(
    id: "leftwards_harpoon_with_barb_up_from_bar",
    name: "Leftwards Harpoon With Barb Up From Bar",
    symbol: "⥚",
    code: 0x295A,
    altCode: "&#x295A;",
    htmlCode: "&#10586;",
  ),
  rightwardsHarpoonWithBarbUpFromBar(
    id: "rightwards_harpoon_with_barb_up_from_bar",
    name: "Rightwards Harpoon With Barb Up From Bar",
    symbol: "⥛",
    code: 0x295B,
    altCode: "&#x295B;",
    htmlCode: "&#10587;",
  ),
  upwardsHarpoonWithBarbRightFromBar(
    id: "upwards_harpoon_with_barb_right_from_bar",
    name: "Upwards Harpoon With Barb Right From Bar",
    symbol: "⥜",
    code: 0x295C,
    altCode: "&#x295C;",
    htmlCode: "&#10588;",
  ),
  downwardsHarpoonWithBarbRightFromBar(
    id: "downwards_harpoon_with_barb_right_from_bar",
    name: "Downwards Harpoon With Barb Right From Bar",
    symbol: "⥝",
    code: 0x295D,
    altCode: "&#x295D;",
    htmlCode: "&#10589;",
  ),
  leftwardsHarpoonWithBarbDownFromBar(
    id: "leftwards_harpoon_with_barb_down_from_bar",
    name: "Leftwards Harpoon With Barb Down From Bar",
    symbol: "⥞",
    code: 0x295E,
    altCode: "&#x295E;",
    htmlCode: "&#10590;",
  ),
  rightwardsHarpoonWithBarbDownFromBar(
    id: "rightwards_harpoon_with_barb_down_from_bar",
    name: "Rightwards Harpoon With Barb Down From Bar",
    symbol: "⥟",
    code: 0x295F,
    altCode: "&#x295F;",
    htmlCode: "&#10591;",
  ),
  upwardsHarpoonWithBarbLeftFromBar(
    id: "upwards_harpoon_with_barb_left_from_bar",
    name: "Upwards Harpoon With Barb Left From Bar",
    symbol: "⥠",
    code: 0x2960,
    altCode: "&#x2960;",
    htmlCode: "&#10592;",
  ),
  downwardsHarpoonWithBarbLeftFromBar(
    id: "downwards_harpoon_with_barb_left_from_bar",
    name: "Downwards Harpoon With Barb Left From Bar",
    symbol: "⥡",
    code: 0x2961,
    altCode: "&#x2961;",
    htmlCode: "&#10593;",
  ),
  leftwardsHarpoonWithBarbUpAboveLeftwardsHarpoonWithBarbDown(
    id: "leftwards_harpoon_with_barb_up_above_leftwards_harpoon_with_barb_down",
    name:
        "Leftwards Harpoon With Barb Up Above Leftwards Harpoon With Barb Down",
    symbol: "⥢",
    code: 0x2962,
    altCode: "&#x2962;",
    htmlCode: "&#10594;",
  ),
  upwardsHarpoonWithBarbLeftBesideUpwardsHarpoonWithBarbRight(
    id: "upwards_harpoon_with_barb_left_beside_upwards_harpoon_with_barb_right",
    name:
        "Upwards Harpoon With Barb Left Beside Upwards Harpoon With Barb Right",
    symbol: "⥣",
    code: 0x2963,
    altCode: "&#x2963;",
    htmlCode: "&#10595;",
  ),
  rightwardsHarpoonWithBarbUpAboveRightwardsHarpoonWithBarbDown(
    id: "rightwards_harpoon_with_barb_up_above_rightwards_harpoon_with_barb_down",
    name:
        "Rightwards Harpoon With Barb Up Above Rightwards Harpoon With Barb Down",
    symbol: "⥤",
    code: 0x2964,
    altCode: "&#x2964;",
    htmlCode: "&#10596;",
  ),
  downwardsHarpoonWithBarbLeftBesideDownwardsHarpoonWithBarbRight(
    id: "downwards_harpoon_with_barb_left_beside_downwards_harpoon_with_barb_right",
    name:
        "Downwards Harpoon With Barb Left Beside Downwards Harpoon With Barb Right",
    symbol: "⥥",
    code: 0x2965,
    altCode: "&#x2965;",
    htmlCode: "&#10597;",
  ),
  leftwardsHarpoonWithBarbUpAboveRightwardsHarpoonWithBarbUp(
    id: "leftwards_harpoon_with_barb_up_above_rightwards_harpoon_with_barb_up",
    name:
        "Leftwards Harpoon With Barb Up Above Rightwards Harpoon With Barb Up",
    symbol: "⥦",
    code: 0x2966,
    altCode: "&#x2966;",
    htmlCode: "&#10598;",
  ),
  leftwardsHarpoonWithBarbDownAboveRightwardsHarpoonWithBarbDown(
    id: "leftwards_harpoon_with_barb_down_above_rightwards_harpoon_with_barb_down",
    name:
        "Leftwards Harpoon With Barb Down Above Rightwards Harpoon With Barb Down",
    symbol: "⥧",
    code: 0x2967,
    altCode: "&#x2967;",
    htmlCode: "&#10599;",
  ),
  rightwardsHarpoonWithBarbUpAboveLeftwardsHarpoonWithBarbUp(
    id: "rightwards_harpoon_with_barb_up_above_leftwards_harpoon_with_barb_up",
    name:
        "Rightwards Harpoon With Barb Up Above Leftwards Harpoon With Barb Up",
    symbol: "⥨",
    code: 0x2968,
    altCode: "&#x2968;",
    htmlCode: "&#10600;",
  ),
  rightwardsHarpoonWithBarbDownAboveLeftwardsHarpoonWithBarbDown(
    id: "rightwards_harpoon_with_barb_down_above_leftwards_harpoon_with_barb_down",
    name:
        "Rightwards Harpoon With Barb Down Above Leftwards Harpoon With Barb Down",
    symbol: "⥩",
    code: 0x2969,
    altCode: "&#x2969;",
    htmlCode: "&#10601;",
  ),
  leftwardsHarpoonWithBarbUpAboveLongDash(
    id: "leftwards_harpoon_with_barb_up_above_long_dash",
    name: "Leftwards Harpoon With Barb Up Above Long Dash",
    symbol: "⥪",
    code: 0x296A,
    altCode: "&#x296A;",
    htmlCode: "&#10602;",
  ),
  leftwardsHarpoonWithBarbDownBelowLongDash(
    id: "leftwards_harpoon_with_barb_down_below_long_dash",
    name: "Leftwards Harpoon With Barb Down Below Long Dash",
    symbol: "⥫",
    code: 0x296B,
    altCode: "&#x296B;",
    htmlCode: "&#10603;",
  ),
  rightwardsHarpoonWithBarbUpAboveLongDash(
    id: "rightwards_harpoon_with_barb_up_above_long_dash",
    name: "Rightwards Harpoon With Barb Up Above Long Dash",
    symbol: "⥬",
    code: 0x296C,
    altCode: "&#x296C;",
    htmlCode: "&#10604;",
  ),
  rightwardsHarpoonWithBarbDownBelowLongDash(
    id: "rightwards_harpoon_with_barb_down_below_long_dash",
    name: "Rightwards Harpoon With Barb Down Below Long Dash",
    symbol: "⥭",
    code: 0x296D,
    altCode: "&#x296D;",
    htmlCode: "&#10605;",
  ),
  upwardsHarpoonWithBarbLeftBesideDownwardsHarpoonWithBarbRight(
    id: "upwards_harpoon_with_barb_left_beside_downwards_harpoon_with_barb_right",
    name:
        "Upwards Harpoon With Barb Left Beside Downwards Harpoon With Barb Right",
    symbol: "⥮",
    code: 0x296E,
    altCode: "&#x296E;",
    htmlCode: "&#10606;",
  ),
  downwardsHarpoonWithBarbLeftBesideUpwardsHarpoonWithBarbRight(
    id: "downwards_harpoon_with_barb_left_beside_upwards_harpoon_with_barb_right",
    name:
        "Downwards Harpoon With Barb Left Beside Upwards Harpoon With Barb Right",
    symbol: "⥯",
    code: 0x296F,
    altCode: "&#x296F;",
    htmlCode: "&#10607;",
  ),
  blackDiamond(
    id: "black_diamond",
    name: "Black Diamond",
    symbol: "◆",
    code: 0x25C6,
    altCode: "&#x25C6;",
    htmlCode: "&#9670;",
  ),
  whiteDiamond(
    id: "white_diamond",
    name: "White Diamond",
    symbol: "◇",
    code: 0x25C7,
    altCode: "&#x25C7;",
    htmlCode: "&#9671;",
  ),
  whiteDiamondContainingBlackSmallDiamond(
    id: "white_diamond_containing_black_small_diamond",
    name: "White Diamond Containing Black Small Diamond",
    symbol: "◈",
    code: 0x25C8,
    altCode: "&#x25C8;",
    htmlCode: "&#9672;",
  ),
  whiteDiamondSuit(
    id: "white_diamond_suit",
    name: "White Diamond Suit",
    symbol: "♢",
    code: 0x2662,
    altCode: "&#x2662;",
    htmlCode: "&#9826;",
  ),
  blackDiamondSuit(
    id: "black_diamond_suit",
    name: "Black Diamond Suit",
    symbol: "♦",
    code: 0x2666,
    altCode: "&#x2666;",
    htmlCode: "&#9830;",
  ),
  blackDiamondMinusWhiteX(
    id: "black_diamond_minus_white_x",
    name: "Black Diamond Minus White X",
    symbol: "❖",
    code: 0x2756,
    altCode: "&#x2756;",
    htmlCode: "&#10070;",
  ),
  whiteDiamondWithCentredDot(
    id: "white_diamond_with_centered_dot",
    name: "White Diamond With Centred Dot",
    symbol: "⟐",
    code: 0x27D0,
    altCode: "&#x27D0;",
    htmlCode: "&#10192;",
  ),
  whiteConcaveSidedDiamond(
    id: "white_concave_sided_diamond",
    name: "White Concave-sided Diamond",
    symbol: "⟡",
    code: 0x27E1,
    altCode: "&#x27E1;",
    htmlCode: "&#10209;",
  ),
  whiteConcaveSidedDiamondWithLeftwardsTick(
    id: "white_concave_sided_diamond_with_leftwards_tick",
    name: "White Concave-sided Diamond With Leftwards Tick",
    symbol: "⟢",
    code: 0x27E2,
    altCode: "&#x27E2;",
    htmlCode: "&#10210;",
  ),
  whiteConcaveSidedDiamondWithRightwardsTick(
    id: "white_concave_sided_diamond_with_rightwards_tick",
    name: "White Concave-sided Diamond With Rightwards Tick",
    symbol: "⟣",
    code: 0x27E3,
    altCode: "&#x27E3;",
    htmlCode: "&#10211;",
  ),
  errorBarredWhiteDiamond(
    id: "error_barred_white_diamond",
    name: "Error-barred White Diamond",
    symbol: "⧰",
    code: 0x29F0,
    altCode: "&#x29F0;",
    htmlCode: "&#10736;",
  ),
  errorBarredBlackDiamond(
    id: "error_barred_black_diamond",
    name: "Error-barred Black Diamond",
    symbol: "⧱",
    code: 0x29F1,
    altCode: "&#x29F1;",
    htmlCode: "&#10737;",
  ),
  diamondWithLeftHalfBlack(
    id: "diamond_with_left_half_black",
    name: "Diamond With Left Half Black",
    symbol: "⬖",
    code: 0x2B16,
    altCode: "&#x2B16;",
    htmlCode: "&#11030;",
  ),
  diamondWithRightHalfBlack(
    id: "diamond_with_right_half_black",
    name: "Diamond With Right Half Black",
    symbol: "⬗",
    code: 0x2B17,
    altCode: "&#x2B17;",
    htmlCode: "&#11031;",
  ),
  diamondWithTopHalfBlack(
    id: "diamond_with_top_half_black",
    name: "Diamond With Top Half Black",
    symbol: "⬘",
    code: 0x2B18,
    altCode: "&#x2B18;",
    htmlCode: "&#11032;",
  ),
  diamondWithBottomHalfBlack(
    id: "diamond_with_bottom_half_black",
    name: "Diamond With Bottom Half Black",
    symbol: "⬙",
    code: 0x2B19,
    altCode: "&#x2B19;",
    htmlCode: "&#11033;",
  ),
  blackMediumDiamond(
    id: "black_medium_diamond",
    name: "Black Medium Diamond",
    symbol: "⬥",
    code: 0x2B25,
    altCode: "&#x2B25;",
    htmlCode: "&#11045;",
  ),
  whiteMediumDiamond(
    id: "white_medium_diamond",
    name: "White Medium Diamond",
    symbol: "⬦",
    code: 0x2B26,
    altCode: "&#x2B26;",
    htmlCode: "&#11046;",
  ),
  blackSmallDiamond(
    id: "black_small_diamond",
    name: "Black Small Diamond",
    symbol: "⬩",
    code: 0x2B29,
    altCode: "&#x2B29;",
    htmlCode: "&#11049;",
  ),
  blackDiamondCentred(
    id: "black_diamond_centred",
    name: "Black Diamond Centred",
    symbol: "⯁",
    code: 0x2BC1,
    altCode: "&#x2BC1;",
    htmlCode: "&#11201;",
  ),
  mathematicalRisingDiagonal(
    id: "mathematical_rising_diagonal",
    name: "Mathematical Rising Diagonal",
    symbol: "⟋",
    code: 0x27CB,
    altCode: "&#x27CB;",
    htmlCode: "&#10187;",
  ),
  mathematicalFallingDiagonal(
    id: "mathematical_falling_diagonal",
    name: "Mathematical Falling Diagonal",
    symbol: "⟍",
    code: 0x27CD,
    altCode: "&#x27CD;",
    htmlCode: "&#10189;",
  ),
  risingDiagonalCrossingFallingDiagonal(
    id: "rising_diagonal_crossing_falling_diagonal",
    name: "Rising Diagonal Crossing Falling Diagonal",
    symbol: "⤫",
    code: 0x292B,
    altCode: "&#x292B;",
    htmlCode: "&#10539;",
  ),
  fallingDiagonalCrossingRisingDiagonal(
    id: "falling_diagonal_crossing_rising_diagonal",
    name: "Falling Diagonal Crossing Rising Diagonal",
    symbol: "⤬",
    code: 0x292C,
    altCode: "&#x292C;",
    htmlCode: "&#10540;",
  ),
  fallingDiagonalCrossingNorthEastArrow(
    id: "falling_diagonal_crossing_north_east_arrow",
    name: "Falling Diagonal Crossing North East Arrow",
    symbol: "⤯",
    code: 0x292F,
    altCode: "&#x292F;",
    htmlCode: "&#10543;",
  ),
  risingDiagonalCrossingSouthEastArrow(
    id: "rising_diagonal_crossing_south_east_arrow",
    name: "Rising Diagonal Crossing South East Arrow",
    symbol: "⤰",
    code: 0x2930,
    altCode: "&#x2930;",
    htmlCode: "&#10544;",
  ),
  narySquareIntersectionOperator(
    id: "nary_square_intersection_operator",
    name: "N-ary Square Intersection Operator",
    symbol: "⨅",
    code: 0x2A05,
    altCode: "&#x2A05;",
    htmlCode: "&#10757;",
  ),
  integralWithIntersection(
    id: "integral_with_intersection",
    name: "Integral With Intersection",
    symbol: "⨙",
    code: 0x2A19,
    altCode: "&#x2A19;",
    htmlCode: "&#10777;",
  ),
  intersectionWithDot(
    id: "intersection_with_dot",
    name: "Intersection With Dot",
    symbol: "⩀",
    code: 0x2A40,
    altCode: "&#x2A40;",
    htmlCode: "&#10816;",
  ),
  intersectionWithOverbar(
    id: "intersection_with_overbar",
    name: "Intersection With Overbar",
    symbol: "⩃",
    code: 0x2A43,
    altCode: "&#x2A43;",
    htmlCode: "&#10819;",
  ),
  intersectionWithLogicalAnd(
    id: "intersection_with_logical_and",
    name: "Intersection With Logical And",
    symbol: "⩄",
    code: 0x2A44,
    altCode: "&#x2A44;",
    htmlCode: "&#10820;",
  ),
  unionAboveIntersection(
    id: "union_above_intersection",
    name: "Union Above Intersection",
    symbol: "⩆",
    code: 0x2A46,
    altCode: "&#x2A46;",
    htmlCode: "&#10822;",
  ),
  intersectionAboveUnion(
    id: "intersection_above_union",
    name: "Intersection Above Union",
    symbol: "⩇",
    code: 0x2A47,
    altCode: "&#x2A47;",
    htmlCode: "&#10823;",
  ),
  unionAboveBarAboveIntersection(
    id: "union_above_bar_above_intersection",
    name: "Union Above Bar Above Intersection",
    symbol: "⩈",
    code: 0x2A48,
    altCode: "&#x2A48;",
    htmlCode: "&#10824;",
  ),
  intersectionAboveBarAboveUnion(
    id: "intersection_above_bar_above_union",
    name: "Intersection Above Bar Above Union",
    symbol: "⩉",
    code: 0x2A49,
    altCode: "&#x2A49;",
    htmlCode: "&#10825;",
  ),
  intersectionBesideAndJoinedWithIntersection(
    id: "intersection_beside_and_joined_with_intersection",
    name: "Intersection Beside And Joined With Intersection",
    symbol: "⩋",
    code: 0x2A4B,
    altCode: "&#x2A4B;",
    htmlCode: "&#10827;",
  ),
  closedIntersectionWithSerifs(
    id: "closed_intersection_with_serifs",
    name: "Closed Intersection With Serifs",
    symbol: "⩍",
    code: 0x2A4D,
    altCode: "&#x2A4D;",
    htmlCode: "&#10829;",
  ),
  doubleSquareIntersection(
    id: "double_square_intersection",
    name: "Double Square Intersection",
    symbol: "⩎",
    code: 0x2A4E,
    altCode: "&#x2A4E;",
    htmlCode: "&#10830;",
  ),
  transversalIntersection(
    id: "transversal_intersection",
    name: "Transversal Intersection",
    symbol: "⫛",
    code: 0x2ADB,
    altCode: "&#x2ADB;",
    htmlCode: "&#10971;",
  ),
  blackHorizontalEllipse(
    id: "black_horizontal_ellipse",
    name: "Black Horizontal Ellipse",
    symbol: "⬬",
    code: 0x2B2C,
    altCode: "&#x2B2C;",
    htmlCode: "&#11052;",
  ),
  whiteHorizontalEllipse(
    id: "white_horizontal_ellipse",
    name: "White Horizontal Ellipse",
    symbol: "⬭",
    code: 0x2B2D,
    altCode: "&#x2B2D;",
    htmlCode: "&#11053;",
  ),
  blackVerticalEllipse(
    id: "black_vertical_ellipse",
    name: "Black Vertical Ellipse",
    symbol: "⬮",
    code: 0x2B2E,
    altCode: "&#x2B2E;",
    htmlCode: "&#11054;",
  ),
  whiteVerticalEllipse(
    id: "white_vertical_ellipse",
    name: "White Vertical Ellipse",
    symbol: "⬯",
    code: 0x2B2F,
    altCode: "&#x2B2F;",
    htmlCode: "&#11055;",
  ),
  upperLeftQuadrantCircularArc(
    id: "upper_left_quadrant_circular_arc",
    name: "Upper Left Quadrant Circular Arc",
    symbol: "◜",
    code: 0x25DC,
    altCode: "&#x25DC;",
    htmlCode: "&#9692;",
  ),
  upperRightQuadrantCircularArc(
    id: "upper_right_quadrant_circular_arc",
    name: "Upper Right Quadrant Circular Arc",
    symbol: "◝",
    code: 0x25DD,
    altCode: "&#x25DD;",
    htmlCode: "&#9693;",
  ),
  lowerRightQuadrantCircularArc(
    id: "lower_right_quadrant_circular_arc",
    name: "Lower Right Quadrant Circular Arc",
    symbol: "◞",
    code: 0x25DE,
    altCode: "&#x25DE;",
    htmlCode: "&#9694;",
  ),
  lowerLeftQuadrantCircularArc(
    id: "lower_left_quadrant_circular_arc",
    name: "Lower Left Quadrant Circular Arc",
    symbol: "◟",
    code: 0x25DF,
    altCode: "&#x25DF;",
    htmlCode: "&#9695;",
  ),
  rightSideArcClockwiseArrow(
    id: "right_side_arc_clockwise_arrow",
    name: "Right-side Arc Clockwise Arrow",
    symbol: "⤸",
    code: 0x2938,
    altCode: "&#x2938;",
    htmlCode: "&#10552;",
  ),
  leftSideArcAnticlockwiseArrow(
    id: "left_side_arc_anticlockwise_arrow",
    name: "Left-side Arc Anticlockwise Arrow",
    symbol: "⤹",
    code: 0x2939,
    altCode: "&#x2939;",
    htmlCode: "&#10553;",
  ),
  topArcAnticlockwiseArrow(
    id: "top_arc_anticlockwise_arrow",
    name: "Top Arc Anticlockwise Arrow",
    symbol: "⤺",
    code: 0x293A,
    altCode: "&#x293A;",
    htmlCode: "&#10554;",
  ),
  bottomArcAnticlockwiseArrow(
    id: "bottom_arc_anticlockwise_arrow",
    name: "Bottom Arc Anticlockwise Arrow",
    symbol: "⤻",
    code: 0x293B,
    altCode: "&#x293B;",
    htmlCode: "&#10555;",
  ),
  topArcClockwiseArrowWithMinus(
    id: "top_arc_clockwise_arrow_with_minus",
    name: "Top Arc Clockwise Arrow With Minus",
    symbol: "⤼",
    code: 0x293C,
    altCode: "&#x293C;",
    htmlCode: "&#10556;",
  ),
  topArcAnticlockwiseArrowWithPlus(
    id: "top_arc_anticlockwise_arrow_with_plus",
    name: "Top Arc Anticlockwise Arrow With Plus",
    symbol: "⤽",
    code: 0x293D,
    altCode: "&#x293D;",
    htmlCode: "&#10557;",
  ),
  leftArcLessThanBracket(
    id: "left_arc_less_than_bracket",
    name: "Left Arc Less-than Bracket",
    symbol: "⦓",
    code: 0x2993,
    altCode: "&#x2993;",
    htmlCode: "&#10643;",
  ),
  rightArcGreaterThanBracket(
    id: "right_arc_greater_than_bracket",
    name: "Right Arc Greater-than Bracket",
    symbol: "⦔",
    code: 0x2994,
    altCode: "&#x2994;",
    htmlCode: "&#10644;",
  ),
  doubleLeftArcGreaterThanBracket(
    id: "double_left_arc_greater_than_bracket",
    name: "Double Left Arc Greater-than Bracket",
    symbol: "⦕",
    code: 0x2995,
    altCode: "&#x2995;",
    htmlCode: "&#10645;",
  ),
  doubleRightArcLessThanBracket(
    id: "double_right_arc_less_than_bracket",
    name: "Double Right Arc Less-than Bracket",
    symbol: "⦖",
    code: 0x2996,
    altCode: "&#x2996;",
    htmlCode: "&#10646;",
  ),
  summationWithIntegral(
    id: "summation_with_integral",
    name: "Summation With Integral",
    symbol: "⨋",
    code: 0x2A0B,
    altCode: "&#x2A0B;",
    htmlCode: "&#10763;",
  ),
  quadrupleIntegralOperator(
    id: "quadruple_integral_operator",
    name: "Quadruple Integral Operator",
    symbol: "⨌",
    code: 0x2A0C,
    altCode: "&#x2A0C;",
    htmlCode: "&#10764;",
  ),
  finitePartIntegral(
    id: "finite_part_integral",
    name: "Finite Part Integral",
    symbol: "⨍",
    code: 0x2A0D,
    altCode: "&#x2A0D;",
    htmlCode: "&#10765;",
  ),
  integralWithDoubleStroke(
    id: "integral_with_double_stroke",
    name: "Integral With Double Stroke",
    symbol: "⨎",
    code: 0x2A0E,
    altCode: "&#x2A0E;",
    htmlCode: "&#10766;",
  ),
  integralAverageWithSlash(
    id: "integral_average_with_slash",
    name: "Integral Average With Slash",
    symbol: "⨏",
    code: 0x2A0F,
    altCode: "&#x2A0F;",
    htmlCode: "&#10767;",
  ),
  integralAroundAPointOperator(
    id: "integral_around_a_point_operator",
    name: "Integral Around A Point Operator",
    symbol: "⨕",
    code: 0x2A15,
    altCode: "&#x2A15;",
    htmlCode: "&#10773;",
  ),
  quaternionIntegralOperator(
    id: "quaternion_integral_operator",
    name: "Quaternion Integral Operator",
    symbol: "⨖",
    code: 0x2A16,
    altCode: "&#x2A16;",
    htmlCode: "&#10774;",
  ),
  integralWithLeftwardsArrowWithHook(
    id: "integral_with_leftwards_arrow_with_hook",
    name: "Integral With Leftwards Arrow With Hook",
    symbol: "⨗",
    code: 0x2A17,
    altCode: "&#x2A17;",
    htmlCode: "&#10775;",
  ),
  integralWithTimesSign(
    id: "integral_with_times_sign",
    name: "Integral With Times Sign",
    symbol: "⨘",
    code: 0x2A18,
    altCode: "&#x2A18;",
    htmlCode: "&#10776;",
  ),
  integralWithUnion(
    id: "integral_with_union",
    name: "Integral With Union",
    symbol: "⨚",
    code: 0x2A1A,
    altCode: "&#x2A1A;",
    htmlCode: "&#10778;",
  ),
  integralWithOverbar(
    id: "integral_with_overbar",
    name: "Integral With Overbar",
    symbol: "⨛",
    code: 0x2A1B,
    altCode: "&#x2A1B;",
    htmlCode: "&#10779;",
  ),
  integralWithUnderbar(
    id: "integral_with_underbar",
    name: "Integral With Underbar",
    symbol: "⨜",
    code: 0x2A1C,
    altCode: "&#x2A1C;",
    htmlCode: "&#10780;",
  ),
  trigramForHeaven(
    id: "trigram_for_heaven",
    name: "Trigram For Heaven",
    symbol: "☰",
    code: 0x2630,
    altCode: "&#x2630;",
    htmlCode: "&#9776;",
  ),
  trigramForLake(
    id: "trigram_for_lake",
    name: "Trigram For Lake",
    symbol: "☱",
    code: 0x2631,
    altCode: "&#x2631;",
    htmlCode: "&#9777;",
  ),
  trigramForFire(
    id: "trigram_for_fire",
    name: "Trigram For Fire",
    symbol: "☲",
    code: 0x2632,
    altCode: "&#x2632;",
    htmlCode: "&#9778;",
  ),
  trigramForThunder(
    id: "trigram_for_thunder",
    name: "Trigram For Thunder",
    symbol: "☳",
    code: 0x2633,
    altCode: "&#x2633;",
    htmlCode: "&#9779;",
  ),
  trigramForWind(
    id: "trigram_for_wind",
    name: "Trigram For Wind",
    symbol: "☴",
    code: 0x2634,
    altCode: "&#x2634;",
    htmlCode: "&#9780;",
  ),
  trigramForWater(
    id: "trigram_for_water",
    name: "Trigram For Water",
    symbol: "☵",
    code: 0x2635,
    altCode: "&#x2635;",
    htmlCode: "&#9781;",
  ),
  trigramForMountain(
    id: "trigram_for_mountain",
    name: "Trigram For Mountain",
    symbol: "☶",
    code: 0x2636,
    altCode: "&#x2636;",
    htmlCode: "&#9782;",
  ),
  trigramForEarth(
    id: "trigram_for_earth",
    name: "Trigram For Earth",
    symbol: "☷",
    code: 0x2637,
    altCode: "&#x2637;",
    htmlCode: "&#9783;",
  ),
  lozenge(
    id: "lozenge",
    name: "Lozenge",
    symbol: "◊",
    code: 0x25CA,
    altCode: "&#x25CA;",
    htmlCode: "&#9674;",
  ),
  lozengeDividedByHorizontalRule(
    id: "lozenge_divided_by_horizontal_rule",
    name: "Lozenge Divided By Horizontal Rule",
    symbol: "⟠",
    code: 0x27E0,
    altCode: "&#x27E0;",
    htmlCode: "&#10208;",
  ),
  blackLozenge(
    id: "black_lozenge",
    name: "Black Lozenge",
    symbol: "⧫",
    code: 0x29EB,
    altCode: "&#x29EB;",
    htmlCode: "&#10731;",
  ),
  blackMediumLozenge(
    id: "black_medium_lozenge",
    name: "Black Medium Lozenge",
    symbol: "⬧",
    code: 0x2B27,
    altCode: "&#x2B27;",
    htmlCode: "&#11047;",
  ),
  whiteMediumLozenge(
    id: "white_medium_lozenge",
    name: "White Medium Lozenge",
    symbol: "⬨",
    code: 0x2B28,
    altCode: "&#x2B28;",
    htmlCode: "&#11048;",
  ),
  blackSmallLozenge(
    id: "black_small_lozenge",
    name: "Black Small Lozenge",
    symbol: "⬪",
    code: 0x2B2A,
    altCode: "&#x2B2A;",
    htmlCode: "&#11050;",
  ),
  whiteSmallLozenge(
    id: "white_small_lozenge",
    name: "White Small Lozenge",
    symbol: "⬫",
    code: 0x2B2B,
    altCode: "&#x2B2B;",
    htmlCode: "&#11051;",
  ),
  blackParallelogram(
    id: "black_parallelogram",
    name: "Black Parallelogram",
    symbol: "▰",
    code: 0x25B0,
    altCode: "&#x25B0;",
    htmlCode: "&#9648;",
  ),
  whiteParallelogram(
    id: "white_parallelogram",
    name: "White Parallelogram",
    symbol: "▱",
    code: 0x25B1,
    altCode: "&#x25B1;",
    htmlCode: "&#9649;",
  ),
  doubleStruckNarySummation(
    id: "double_struck_nary_summation",
    name: "Double-struck N-ary Summation",
    symbol: "⅀",
    code: 0x2140,
    altCode: "&#x2140;",
    htmlCode: "&#8512;",
  ),
  narySummation(
    id: "n_ary_summation",
    name: "N-ary Summation",
    symbol: "∑",
    code: 0x2211,
    altCode: "&#x2211;",
    htmlCode: "&#8721;",
  ),
  summationTop(
    id: "summation_top",
    name: "Summation Top",
    symbol: "⎲",
    code: 0x23B2,
    altCode: "&#x23B2;",
    htmlCode: "&#9138;",
  ),
  summationBottom(
    id: "summation_bottom",
    name: "Summation Bottom",
    symbol: "⎳",
    code: 0x23B3,
    altCode: "&#x23B3;",
    htmlCode: "&#9139;",
  ),
  lessThan(
    id: "less_than",
    name: "Less-than Sign",
    symbol: "<",
    code: 0x003C,
    altCode: "&#x003C;",
    htmlCode: "&#60;",
  ),
  lessThanOrEqualTo(
    id: "less_than_or_equal_to",
    name: "Less-than Or Equal To",
    symbol: "≤",
    code: 0x2264,
    altCode: "&#x2264;",
    htmlCode: "&#8804;",
  ),
  lessThanOverEqualTo(
    id: "less_than_over_equal_to",
    name: "Less-than Over Equal To",
    symbol: "≦",
    code: 0x2266,
    altCode: "&#x2266;",
    htmlCode: "&#8806;",
  ),
  lessThanButNotEqualTo(
    id: "less_than_but_not_equal_to",
    name: "Less-than But Not Equal To",
    symbol: "≨",
    code: 0x2268,
    altCode: "&#x2268;",
    htmlCode: "&#8808;",
  ),
  muchLessThan(
    id: "much_less_than",
    name: "Much Less-than",
    symbol: "≪",
    code: 0x226A,
    altCode: "&#x226A;",
    htmlCode: "&#8810;",
  ),
  notLessThan(
    id: "not_less_than",
    name: "Not Less-than",
    symbol: "≮",
    code: 0x226E,
    altCode: "&#x226E;",
    htmlCode: "&#8814;",
  ),
  neitherLessThanNorEqualTo(
    id: "neither_less_than_nor_equal_to",
    name: "Neither Less-than Nor Equal To",
    symbol: "≰",
    code: 0x2270,
    altCode: "&#x2270;",
    htmlCode: "&#8816;",
  ),
  lessThanOrEquivalentTo(
    id: "less_than_or_equivalent_to",
    name: "Less-than Or Equivalent To",
    symbol: "≲",
    code: 0x2272,
    altCode: "&#x2272;",
    htmlCode: "&#8818;",
  ),
  neitherLessThanNorEquivalentTo(
    id: "neither_less_than_nor_equivalent_to",
    name: "Neither Less-than Nor Equivalent To",
    symbol: "≴",
    code: 0x2274,
    altCode: "&#x2274;",
    htmlCode: "&#8820;",
  ),
  lessThanWithDot(
    id: "less_than_with_dot",
    name: "Less-than With Dot",
    symbol: "⋖",
    code: 0x22D6,
    altCode: "&#x22D6;",
    htmlCode: "&#8918;",
  ),
  veryMuchLessThan(
    id: "very_much_less_than",
    name: "Very Much Less-than",
    symbol: "⋘",
    code: 0x22D8,
    altCode: "&#x22D8;",
    htmlCode: "&#8920;",
  ),
  equalToOrLessThan(
    id: "equal_to_or_less_than",
    name: "Equal To Or Less-than",
    symbol: "⋜",
    code: 0x22DC,
    altCode: "&#x22DC;",
    htmlCode: "&#8924;",
  ),
  lessThanButNotEquivalentTo(
    id: "less_than_but_not_equivalent_to",
    name: "Less-than But Not Equivalent To",
    symbol: "⋦",
    code: 0x22E6,
    altCode: "&#x22E6;",
    htmlCode: "&#8934;",
  ),
  aplFunctionalSymbolQuadLessThan(
    id: "apl_functional_symbol_quad_less_than",
    name: "Apl Functional Symbol Quad Less-than",
    symbol: "⍃",
    code: 0x2343,
    altCode: "&#x2343;",
    htmlCode: "&#9027;",
  ),
  lessThanAboveLeftwardsArrow(
    id: "less_than_above_leftwards_arrow",
    name: "Less-than Above Leftwards Arrow",
    symbol: "⥶",
    code: 0x2976,
    altCode: "&#x2976;",
    htmlCode: "&#10614;",
  ),
  leftwardsArrowThroughLessThan(
    id: "leftwards_arrow_through_less_than",
    name: "Leftwards Arrow Through Less-than",
    symbol: "⥷",
    code: 0x2977,
    altCode: "&#x2977;",
    htmlCode: "&#10615;",
  ),
  circledLessThan(
    id: "circled_less_than",
    name: "Circled Less-than",
    symbol: "⧀",
    code: 0x29C0,
    altCode: "&#x29C0;",
    htmlCode: "&#10688;",
  ),
  lessThanWithCircleInside(
    id: "less_than_with_circle_inside",
    name: "Less-than With Circle Inside",
    symbol: "⩹",
    code: 0x2A79,
    altCode: "&#x2A79;",
    htmlCode: "&#10873;",
  ),
  lessThanWithQuestionMarkAbove(
    id: "less_than_with_question_mark_above",
    name: "Less-than With Question Mark Above",
    symbol: "⩻",
    code: 0x2A7B,
    altCode: "&#x2A7B;",
    htmlCode: "&#10875;",
  ),
  lessThanOrSlantedEqualTo(
    id: "less_than_or_slanted_equal_to",
    name: "Less-than Or Slanted Equal To",
    symbol: "⩽",
    code: 0x2A7D,
    altCode: "&#x2A7D;",
    htmlCode: "&#10877;",
  ),
  lessThanOrSlantedEqualToWithDotInside(
    id: "less_than_or_slanted_equal_to_with_dot_inside",
    name: "Less-than Or Slanted Equal To With Dot Inside",
    symbol: "⩿",
    code: 0x2A7F,
    altCode: "&#x2A7F;",
    htmlCode: "&#10879;",
  ),
  lessThanOrSlantedEqualToWithDotAbove(
    id: "less_than_or_slanted_equal_to_with_dot_above",
    name: "Less-than Or Slanted Equal To With Dot Above",
    symbol: "⪁",
    code: 0x2A81,
    altCode: "&#x2A81;",
    htmlCode: "&#10881;",
  ),
  lessThanOrSlantedEqualToWithDotAboveRight(
    id: "less_than_or_slanted_equal_to_with_dot_above_right",
    name: "Less-than Or Slanted Equal To With Dot Above Right",
    symbol: "⪃",
    code: 0x2A83,
    altCode: "&#x2A83;",
    htmlCode: "&#10883;",
  ),
  lessThanOrApproximate(
    id: "less_than_or_approximate",
    name: "Less-than Or Approximate",
    symbol: "⪅",
    code: 0x2A85,
    altCode: "&#x2A85;",
    htmlCode: "&#10885;",
  ),
  lessThanAndSingleLineNotEqualTo(
    id: "less_than_and_single_line_not_equal_to",
    name: "Less-than And Single-line Not Equal To",
    symbol: "⪇",
    code: 0x2A87,
    altCode: "&#x2A87;",
    htmlCode: "&#10887;",
  ),
  lessThanAndNotApproximate(
    id: "less_than_and_not_approximate",
    name: "Less-than And Not Approximate",
    symbol: "⪉",
    code: 0x2A89,
    altCode: "&#x2A89;",
    htmlCode: "&#10889;",
  ),
  lessThanAboveSimilarOrEqual(
    id: "less_than_above_similar_or_equal",
    name: "Less-than Above Similar Or Equal",
    symbol: "⪍",
    code: 0x2A8D,
    altCode: "&#x2A8D;",
    htmlCode: "&#10893;",
  ),
  slantedEqualToOrLessThan(
    id: "slanted_equal_to_or_less_than",
    name: "Slanted Equal To Or Less-than",
    symbol: "⪕",
    code: 0x2A95,
    altCode: "&#x2A95;",
    htmlCode: "&#10901;",
  ),
  slantedEqualToOrLessThanWithDotInside(
    id: "slanted_equal_to_or_less_than_with_dot_inside",
    name: "Slanted Equal To Or Less-than With Dot Inside",
    symbol: "⪗",
    code: 0x2A97,
    altCode: "&#x2A97;",
    htmlCode: "&#10903;",
  ),
  doubleLineEqualToOrLessThan(
    id: "double_line_equal_to_or_less_than",
    name: "Double-line Equal To Or Less-than",
    symbol: "⪙",
    code: 0x2A99,
    altCode: "&#x2A99;",
    htmlCode: "&#10905;",
  ),
  doubleLineSlantedEqualToOrLessThan(
    id: "double_line_slanted_equal_to_or_less_than",
    name: "Double-line Slanted Equal To Or Less-than",
    symbol: "⪛",
    code: 0x2A9B,
    altCode: "&#x2A9B;",
    htmlCode: "&#10907;",
  ),
  similarOrLessThan(
    id: "similar_or_less_than",
    name: "Similar Or Less-than",
    symbol: "⪝",
    code: 0x2A9D,
    altCode: "&#x2A9D;",
    htmlCode: "&#10909;",
  ),
  similarAboveLessThanAboveEqualsSign(
    id: "similar_above_less_than_above_equals_sign",
    name: "Similar Above Less-than Above Equals Sign",
    symbol: "⪟",
    code: 0x2A9F,
    altCode: "&#x2A9F;",
    htmlCode: "&#10911;",
  ),
  doubleNestedLessThan(
    id: "double_nested_less_than",
    name: "Double Nested Less-than",
    symbol: "⪡",
    code: 0x2AA1,
    altCode: "&#x2AA1;",
    htmlCode: "&#10913;",
  ),
  doubleNestedLessThanWithUnderbar(
    id: "double_nested_less_than_with_underbar",
    name: "Double Nested Less-than With Underbar",
    symbol: "⪣",
    code: 0x2AA3,
    altCode: "&#x2AA3;",
    htmlCode: "&#10915;",
  ),
  lessThanClosedByCurve(
    id: "less_than_closed_by_curve",
    name: "Less-than Closed By Curve",
    symbol: "⪦",
    code: 0x2AA6,
    altCode: "&#x2AA6;",
    htmlCode: "&#10918;",
  ),
  lessThanClosedByCurveAboveSlantedEqual(
    id: "less_than_closed_by_curve_above_slanted_equal",
    name: "Less-than Closed By Curve Above Slanted Equal",
    symbol: "⪨",
    code: 0x2AA8,
    altCode: "&#x2AA8;",
    htmlCode: "&#10920;",
  ),
  tripleNestedLessThan(
    id: "triple_nested_less_than",
    name: "Triple Nested Less-than",
    symbol: "⫷",
    code: 0x2AF7,
    altCode: "&#x2AF7;",
    htmlCode: "&#10999;",
  ),
  doubleLineSlantedLessThanOrEqualTo(
    id: "double_line_slanted_less_than_or_equal_to",
    name: "Double-line Slanted Less-than Or Equal To",
    symbol: "⫹",
    code: 0x2AF9,
    altCode: "&#x2AF9;",
    htmlCode: "&#11001;",
  ),
  smallLessThanSign(
    id: "small_less_than_sign",
    name: "Small Less-than Sign",
    symbol: "﹤",
    code: 0xFE64,
    altCode: "&#xFE64;",
    htmlCode: "&#65124;",
  ),
  fullwidthLessThanSign(
    id: "fullwidth_less_than_sign",
    name: "Fullwidth Less-than Sign",
    symbol: "＜",
    code: 0xFF1C,
    altCode: "&#xFF1C;",
    htmlCode: "&#65308;",
  ),
  greaterThan(
    id: "greater_than",
    name: "Greater-than Sign",
    symbol: ">",
    code: 0x003E,
    altCode: "&#x003E;",
    htmlCode: "&#62;",
  ),
  greaterThanOrEqualTo(
    id: "greater_than_or_equal_to",
    name: "Greater-than Or Equal To",
    symbol: "≥",
    code: 0x2265,
    altCode: "&#x2265;",
    htmlCode: "&#8805;",
  ),
  greaterThanOverEqualTo(
    id: "greater_than_over_equal_to",
    name: "Greater-than Over Equal To",
    symbol: "≧",
    code: 0x2267,
    altCode: "&#x2267;",
    htmlCode: "&#8807;",
  ),
  greaterThanButNotEqualTo(
    id: "greater_than_but_not_equal_to",
    name: "Greater-than But Not Equal To",
    symbol: "≩",
    code: 0x2269,
    altCode: "&#x2269;",
    htmlCode: "&#8809;",
  ),
  muchGreaterThan(
    id: "much_greater_than",
    name: "Much Greater-than",
    symbol: "≫",
    code: 0x226B,
    altCode: "&#x226B;",
    htmlCode: "&#8811;",
  ),
  notGreaterThan(
    id: "not_greater_than",
    name: "Not Greater-than",
    symbol: "≯",
    code: 0x226F,
    altCode: "&#x226F;",
    htmlCode: "&#8815;",
  ),
  neitherGreaterThanNorEqualTo(
    id: "neither_greater_than_nor_equal_to",
    name: "Neither Greater-than Nor Equal To",
    symbol: "≱",
    code: 0x2271,
    altCode: "&#x2271;",
    htmlCode: "&#8817;",
  ),
  greaterThanOrEquivalentTo(
    id: "greater_than_or_equivalent_to",
    name: "Greater-than Or Equivalent To",
    symbol: "≳",
    code: 0x2273,
    altCode: "&#x2273;",
    htmlCode: "&#8819;",
  ),
  neitherGreaterThanNorEquivalentTo(
    id: "neither_greater_than_nor_equivalent_to",
    name: "Neither Greater-than Nor Equivalent To",
    symbol: "≵",
    code: 0x2275,
    altCode: "&#x2275;",
    htmlCode: "&#8821;",
  ),
  greaterThanWithDot(
    id: "greater_than_with_dot",
    name: "Greater-than With Dot",
    symbol: "⋗",
    code: 0x22D7,
    altCode: "&#x22D7;",
    htmlCode: "&#8919;",
  ),
  veryMuchGreaterThan(
    id: "very_much_greater_than",
    name: "Very Much Greater-than",
    symbol: "⋙",
    code: 0x22D9,
    altCode: "&#x22D9;",
    htmlCode: "&#8921;",
  ),
  equalToOrGreaterThan(
    id: "equal_to_or_greater_than",
    name: "Equal To Or Greater-than",
    symbol: "⋝",
    code: 0x22DD,
    altCode: "&#x22DD;",
    htmlCode: "&#8925;",
  ),
  greaterThanButNotEquivalentTo(
    id: "greater_than_but_not_equivalent_to",
    name: "Greater-than But Not Equivalent To",
    symbol: "⋧",
    code: 0x22E7,
    altCode: "&#x22E7;",
    htmlCode: "&#8935;",
  ),
  aplFunctionalSymbolQuadGreaterThan(
    id: "apl_functional_symbol_quad_greater_than",
    name: "Apl Functional  Quad Greater-than",
    symbol: "⍄",
    code: 0x2344,
    altCode: "&#x2344;",
    htmlCode: "&#9028;",
  ),
  aplFunctionalSymbolGreaterThanDiaeresis(
    id: "apl_functional_symbol_greater_than_diaeresis",
    name: "Apl Functional Symbol Greater-than Diaeresis",
    symbol: "⍩",
    code: 0x2369,
    altCode: "&#x2369;",
    htmlCode: "&#9065;",
  ),
  greaterThanAboveRightwardsArrow(
    id: "greater_than_above_rightwards_arrow",
    name: "Greater-than Above Rightwards Arrow",
    symbol: "⥸",
    code: 0x2978,
    altCode: "&#x2978;",
    htmlCode: "&#10616;",
  ),
  circledGreaterThan(
    id: "circled_greater_than",
    name: "Circled Greater-than",
    symbol: "⧁",
    code: 0x29C1,
    altCode: "&#x29C1;",
    htmlCode: "&#10689;",
  ),
  greaterThanWithCircleInside(
    id: "greater_than_with_circle_inside",
    name: "Greater-than With Circle Inside",
    symbol: "⩺",
    code: 0x2A7A,
    altCode: "&#x2A7A;",
    htmlCode: "&#10874;",
  ),
  greaterThanWithQuestionMarkAbove(
    id: "greater_than_with_question_mark_above",
    name: "Greater-than With Question Mark Above",
    symbol: "⩼",
    code: 0x2A7C,
    altCode: "&#x2A7C;",
    htmlCode: "&#10876;",
  ),
  greaterThanOrSlantedEqualTo(
    id: "greater_than_or_slanted_equal_to",
    name: "Greater-than Or Slanted Equal To",
    symbol: "⩾",
    code: 0x2A7E,
    altCode: "&#x2A7E;",
    htmlCode: "&#10878;",
  ),
  greaterThanOrSlantedEqualToWithDotInside(
    id: "greater_than_or_slanted_equal_to_with_dot_inside",
    name: "Greater-than Or Slanted Equal To With Dot Inside",
    symbol: "⪀",
    code: 0x2A80,
    altCode: "&#x2A80;",
    htmlCode: "&#10880;",
  ),
  greaterThanOrSlantedEqualToWithDotAbove(
    id: "greater_than_or_slanted_equal_to_with_dot_above",
    name: "Greater-than Or Slanted Equal To With Dot Above",
    symbol: "⪂",
    code: 0x2A82,
    altCode: "&#x2A82;",
    htmlCode: "&#10882;",
  ),
  greaterThanOrSlantedEqualToWithDotAboveLeft(
    id: "greater_than_or_slanted_equal_to_with_dot_above_left",
    name: "Greater-than Or Slanted Equal To With Dot Above Left",
    symbol: "⪄",
    code: 0x2A84,
    altCode: "&#x2A84;",
    htmlCode: "&#10884;",
  ),
  greaterThanOrApproximate(
    id: "greater_than_or_approximate",
    name: "Greater-than Or Approximate",
    symbol: "⪆",
    code: 0x2A86,
    altCode: "&#x2A86;",
    htmlCode: "&#10886;",
  ),
  greaterThanAndSingleLineNotEqualTo(
    id: "greater_than_and_single_line_not_equal_to",
    name: "Greater-than And Single-line Not Equal To",
    symbol: "⪈",
    code: 0x2A88,
    altCode: "&#x2A88;",
    htmlCode: "&#10888;",
  ),
  greaterThanAndNotApproximate(
    id: "greater_than_and_not_approximate",
    name: "Greater-than And Not Approximate",
    symbol: "⪊",
    code: 0x2A8A,
    altCode: "&#x2A8A;",
    htmlCode: "&#10890;",
  ),
  greaterThanAboveSimilarOrEqual(
    id: "greater_than_above_similar_or_equal",
    name: "Greater-than Above Similar Or Equal",
    symbol: "⪎",
    code: 0x2A8E,
    altCode: "&#x2A8E;",
    htmlCode: "&#10894;",
  ),
  slantedEqualToOrGreaterThan(
    id: "slanted_equal_to_or_greater_than",
    name: "Slanted Equal To Or Greater-than",
    symbol: "⪖",
    code: 0x2A96,
    altCode: "&#x2A96;",
    htmlCode: "&#10902;",
  ),
  slantedEqualToOrGreaterThanWithDotInside(
    id: "slanted_equal_to_or_greater_than_with_dot_inside",
    name: "Slanted Equal To Or Greater-than With Dot Inside",
    symbol: "⪘",
    code: 0x2A98,
    altCode: "&#x2A98;",
    htmlCode: "&#10904;",
  ),
  doubleLineEqualToOrGreaterThan(
    id: "double_line_equal_to_or_greater_than",
    name: "Double-line Equal To Or Greater-than",
    symbol: "⪚",
    code: 0x2A9A,
    altCode: "&#x2A9A;",
    htmlCode: "&#10906;",
  ),
  doubleLineSlantedEqualToOrGreaterThan(
    id: "double_line_slanted_equal_to_or_greater_than",
    name: "Double-line Slanted Equal To Or Greater-than",
    symbol: "⪜",
    code: 0x2A9C,
    altCode: "&#x2A9C;",
    htmlCode: "&#10908;",
  ),
  similarOrGreaterThan(
    id: "similar_or_greater_than",
    name: "Similar Or Greater-than",
    symbol: "⪞",
    code: 0x2A9E,
    altCode: "&#x2A9E;",
    htmlCode: "&#10910;",
  ),
  similarAboveGreaterThanAboveEqualsSign(
    id: "similar_above_greater_than_above_equals_sign",
    name: "Similar Above Greater-than Above Equals Sign",
    symbol: "⪠",
    code: 0x2AA0,
    altCode: "&#x2AA0;",
    htmlCode: "&#10912;",
  ),
  doubleNestedGreaterThan(
    id: "double_nested_greater_than",
    name: "Double Nested Greater-than",
    symbol: "⪢",
    code: 0x2AA2,
    altCode: "&#x2AA2;",
    htmlCode: "&#10914;",
  ),
  greaterThanClosedByCurve(
    id: "greater_than_closed_by_curve",
    name: "Greater-than Closed By Curve",
    symbol: "⪧",
    code: 0x2AA7,
    altCode: "&#x2AA7;",
    htmlCode: "&#10919;",
  ),
  greaterThanClosedByCurveAboveSlantedEqual(
    id: "greater_than_closed_by_curve_above_slanted_equal",
    name: "Greater-than Closed By Curve Above Slanted Equal",
    symbol: "⪩",
    code: 0x2AA9,
    altCode: "&#x2AA9;",
    htmlCode: "&#10921;",
  ),
  tripleNestedGreaterThan(
    id: "triple_nested_greater_than",
    name: "Triple Nested Greater-than",
    symbol: "⫸",
    code: 0x2AF8,
    altCode: "&#x2AF8;",
    htmlCode: "&#11000;",
  ),
  doubleLineSlantedGreaterThanOrEqualTo(
    id: "double_line_slanted_greater_than_or_equal_to",
    name: "Double-line Slanted Greater-than Or Equal To",
    symbol: "⫺",
    code: 0x2AFA,
    altCode: "&#x2AFA;",
    htmlCode: "&#11002;",
  ),
  rightwardsArrowThroughGreaterThan(
    id: "rightwards_arrow_through_greater_than",
    name: "Rightwards Arrow Through Greater-than",
    symbol: "⭃",
    code: 0x2B43,
    altCode: "&#x2B43;",
    htmlCode: "&#11075;",
  ),
  smallGreaterThanSign(
    id: "small_greater_than_sign",
    name: "Small Greater-than Sign",
    symbol: "﹥",
    code: 0xFE65,
    altCode: "&#xFE65;",
    htmlCode: "&#65125;",
  ),
  fullwidthGreaterThanSign(
    id: "fullwidth_greater_than_sign",
    name: "Fullwidth Greater-than Sign",
    symbol: "＞",
    code: 0xFF1E,
    altCode: "&#xFF1E;",
    htmlCode: "&#65310;",
  ),
  equalsSign(
    id: "equals_sign",
    name: "Equals Sign",
    symbol: "=",
    code: 0x003D,
    altCode: "&#x003D;",
    htmlCode: "&#61;",
  ),
  combiningEqualsSignBelow(
    id: "combining_equals_sign_below",
    name: "Combining Equals Sign Below",
    symbol: "͇",
    code: 0x0347,
    altCode: "&#x0347;",
    htmlCode: "&#839;",
  ),
  combiningAlmostEqualToAbove(
    id: "combining_almost_equal_to_above",
    name: "Combining Almost Equal To Above",
    symbol: "͌",
    code: 0x034C,
    altCode: "&#x034C;",
    htmlCode: "&#844;",
  ),
  superscriptEqualsSign(
    id: "superscript_equals_sign",
    name: "Superscript Equals Sign",
    symbol: "⁼",
    code: 0x207C,
    altCode: "&#x207C;",
    htmlCode: "&#8316;",
  ),
  subscriptEqualsSign(
    id: "subscript_equals_sign",
    name: "Subscript Equals Sign",
    symbol: "₌",
    code: 0x208C,
    altCode: "&#x208C;",
    htmlCode: "&#8332;",
  ),
  asymptoticallyEqualTo(
    id: "asymptotically_equal_to",
    name: "Asymptotically Equal To",
    symbol: "≃",
    code: 0x2243,
    altCode: "&#x2243;",
    htmlCode: "&#8771;",
  ),
  notAsymptoticallyEqualTo(
    id: "not_asymptotically_equal_to",
    name: "Not Asymptotically Equal To",
    symbol: "≄",
    code: 0x2244,
    altCode: "&#x2244;",
    htmlCode: "&#8772;",
  ),
  approximatelyEqualTo(
    id: "approximately_equal_to",
    name: "Approximately Equal To",
    symbol: "≅",
    code: 0x2245,
    altCode: "&#x2245;",
    htmlCode: "&#8773;",
  ),
  approximatelyButNotActuallyEqualTo(
    id: "approximately_but_not_actually_equal_to",
    name: "Approximately But Not Actually Equal To",
    symbol: "≆",
    code: 0x2246,
    altCode: "&#x2246;",
    htmlCode: "&#8774;",
  ),
  neitherApproximatelyNorActuallyEqualTo(
    id: "neither_approximately_nor_actually_equal_to",
    name: "Neither Approximately Nor Actually Equal To",
    symbol: "≇",
    code: 0x2247,
    altCode: "&#x2247;",
    htmlCode: "&#8775;",
  ),
  almostEqualTo(
    id: "almost_equal_to",
    name: "Almost Equal To",
    symbol: "≈",
    code: 0x2248,
    altCode: "&#x2248;",
    htmlCode: "&#8776;",
  ),
  notAlmostEqualTo(
    id: "not_almost_equal_to",
    name: "Not Almost Equal To",
    symbol: "≉",
    code: 0x2249,
    altCode: "&#x2249;",
    htmlCode: "&#8777;",
  ),
  almostEqualOrEqualTo(
    id: "almost_equal_or_equal_to",
    name: "Almost Equal Or Equal To",
    symbol: "≊",
    code: 0x224A,
    altCode: "&#x224A;",
    htmlCode: "&#8778;",
  ),
  allEqualTo(
    id: "all_equal_to",
    name: "All Equal To",
    symbol: "≌",
    code: 0x224C,
    altCode: "&#x224C;",
    htmlCode: "&#8780;",
  ),
  geometricallyEqualTo(
    id: "geometrically_equal_to",
    name: "Geometrically Equal To",
    symbol: "≑",
    code: 0x2251,
    altCode: "&#x2251;",
    htmlCode: "&#8785;",
  ),
  approximatelyEqualToOrTheImageOf(
    id: "approximately_equal_to_or_the_image_of",
    name: "Approximately Equal To Or The Image Of",
    symbol: "≒",
    code: 0x2252,
    altCode: "&#x2252;",
    htmlCode: "&#8786;",
  ),
  imageOfOrApproximatelyEqualTo(
    id: "image_of_or_approximately_equal_to",
    name: "Image Of Or Approximately Equal To",
    symbol: "≓",
    code: 0x2253,
    altCode: "&#x2253;",
    htmlCode: "&#8787;",
  ),
  colonEquals(
    id: "colon_equals",
    name: "Colon Equals",
    symbol: "≔",
    code: 0x2254,
    altCode: "&#x2254;",
    htmlCode: "&#8788;",
  ),
  equalsColon(
    id: "equals_colon",
    name: "Equals Colon",
    symbol: "≕",
    code: 0x2255,
    altCode: "&#x2255;",
    htmlCode: "&#8789;",
  ),
  ringInEqualTo(
    id: "ring_in_equal_to",
    name: "Ring In Equal To",
    symbol: "≖",
    code: 0x2256,
    altCode: "&#x2256;",
    htmlCode: "&#8790;",
  ),
  ringEqualTo(
    id: "ring_equal_to",
    name: "Ring Equal To",
    symbol: "≗",
    code: 0x2257,
    altCode: "&#x2257;",
    htmlCode: "&#8791;",
  ),
  starEquals(
    id: "star_equals",
    name: "Star Equals",
    symbol: "≛",
    code: 0x225B,
    altCode: "&#x225B;",
    htmlCode: "&#8795;",
  ),
  deltaEqualTo(
    id: "delta_equal_to",
    name: "Delta Equal To",
    symbol: "≜",
    code: 0x225C,
    altCode: "&#x225C;",
    htmlCode: "&#8796;",
  ),
  equalToByDefinition(
    id: "equal_to_by_definition",
    name: "Equal To By Definition",
    symbol: "≝",
    code: 0x225D,
    altCode: "&#x225D;",
    htmlCode: "&#8797;",
  ),
  questionedEqualTo(
    id: "questioned_equal_to",
    name: "Questioned Equal To",
    symbol: "≟",
    code: 0x225F,
    altCode: "&#x225F;",
    htmlCode: "&#8799;",
  ),
  notEqualTo(
    id: "not_equal_to",
    name: "Not Equal To",
    symbol: "≠",
    code: 0x2260,
    altCode: "&#x2260;",
    htmlCode: "&#8800;",
  ),
  precedesOrEqualTo(
    id: "precedes_or_equal_to",
    name: "Precedes Or Equal To",
    symbol: "≼",
    code: 0x227C,
    altCode: "&#x227C;",
    htmlCode: "&#8828;",
  ),
  succeedsOrEqualTo(
    id: "succeeds_or_equal_to",
    name: "Succeeds Or Equal To",
    symbol: "≽",
    code: 0x227D,
    altCode: "&#x227D;",
    htmlCode: "&#8829;",
  ),
  subsetOfOrEqualTo(
    id: "subset_of_or_equal_to",
    name: "Subset Of Or Equal To",
    symbol: "⊆",
    code: 0x2286,
    altCode: "&#x2286;",
    htmlCode: "&#8838;",
  ),
  supersetOfOrEqualTo(
    id: "superset_of_or_equal_to",
    name: "Superset Of Or Equal To",
    symbol: "⊇",
    code: 0x2287,
    altCode: "&#x2287;",
    htmlCode: "&#8839;",
  ),
  neitherASubsetOfNorEqualTo(
    id: "neither_a_subset_of_nor_equal_to",
    name: "Neither A Subset Of Nor Equal To",
    symbol: "⊈",
    code: 0x2288,
    altCode: "&#x2288;",
    htmlCode: "&#8840;",
  ),
  neitherASupersetOfNorEqualTo(
    id: "neither_a_superset_of_nor_equal_to",
    name: "Neither A Superset Of Nor Equal To",
    symbol: "⊉",
    code: 0x2289,
    altCode: "&#x2289;",
    htmlCode: "&#8841;",
  ),
  subsetOfWithNotEqualTo(
    id: "subset_of_with_not_equal_to",
    name: "Subset Of With Not Equal To",
    symbol: "⊊",
    code: 0x228A,
    altCode: "&#x228A;",
    htmlCode: "&#8842;",
  ),
  supersetOfWithNotEqualTo(
    id: "superset_of_with_not_equal_to",
    name: "Superset Of With Not Equal To",
    symbol: "⊋",
    code: 0x228B,
    altCode: "&#x228B;",
    htmlCode: "&#8843;",
  ),
  squareImageOfOrEqualTo(
    id: "square_image_of_or_equal_to",
    name: "Square Image Of Or Equal To",
    symbol: "⊑",
    code: 0x2291,
    altCode: "&#x2291;",
    htmlCode: "&#8849;",
  ),
  squareOriginalOfOrEqualTo(
    id: "square_original_of_or_equal_to",
    name: "Square Original Of Or Equal To",
    symbol: "⊒",
    code: 0x2292,
    altCode: "&#x2292;",
    htmlCode: "&#8850;",
  ),
  circledEquals(
    id: "circled_equals",
    name: "Circled Equals",
    symbol: "⊜",
    code: 0x229C,
    altCode: "&#x229C;",
    htmlCode: "&#8860;",
  ),
  normalSubgroupOfOrEqualTo(
    id: "normal_subgroup_of_or_equal_to",
    name: "Normal Subgroup Of Or Equal To",
    symbol: "⊴",
    code: 0x22B4,
    altCode: "&#x22B4;",
    htmlCode: "&#8884;",
  ),
  containsAsNormalSubgroupOrEqualTo(
    id: "contains_as_normal_subgroup_or_equal_to",
    name: "Contains As Normal Subgroup Or Equal To",
    symbol: "⊵",
    code: 0x22B5,
    altCode: "&#x22B5;",
    htmlCode: "&#8885;",
  ),
  reversedTildeEquals(
    id: "reversed_tilde_equals",
    name: "Reversed Tilde Equals",
    symbol: "⋍",
    code: 0x22CD,
    altCode: "&#x22CD;",
    htmlCode: "&#8909;",
  ),
  equalAndParallelTo(
    id: "equal_and_parallel_to",
    name: "Equal And Parallel To",
    symbol: "⋕",
    code: 0x22D5,
    altCode: "&#x22D5;",
    htmlCode: "&#8917;",
  ),
  equalToOrPrecedes(
    id: "equal_to_or_precedes",
    name: "Equal To Or Precedes",
    symbol: "⋞",
    code: 0x22DE,
    altCode: "&#x22DE;",
    htmlCode: "&#8926;",
  ),
  equalToOrSucceeds(
    id: "equal_to_or_succeeds",
    name: "Equal To Or Succeeds",
    symbol: "⋟",
    code: 0x22DF,
    altCode: "&#x22DF;",
    htmlCode: "&#8927;",
  ),
  doesNotPrecedeOrEqual(
    id: "does_not_precede_or_equal",
    name: "Does Not Precede Or Equal",
    symbol: "⋠",
    code: 0x22E0,
    altCode: "&#x22E0;",
    htmlCode: "&#8928;",
  ),
  doesNotSucceedOrEqual(
    id: "does_not_succeed_or_equal",
    name: "Does Not Succeed Or Equal",
    symbol: "⋡",
    code: 0x22E1,
    altCode: "&#x22E1;",
    htmlCode: "&#8929;",
  ),
  notSquareImageOfOrEqualTo(
    id: "not_square_image_of_or_equal_to",
    name: "Not Square Image Of Or Equal To",
    symbol: "⋢",
    code: 0x22E2,
    altCode: "&#x22E2;",
    htmlCode: "&#8930;",
  ),
  notSquareOriginalOfOrEqualTo(
    id: "not_square_original_of_or_equal_to",
    name: "Not Square Original Of Or Equal To",
    symbol: "⋣",
    code: 0x22E3,
    altCode: "&#x22E3;",
    htmlCode: "&#8931;",
  ),
  squareImageOfOrNotEqualTo(
    id: "square_image_of_or_not_equal_to",
    name: "Square Image Of Or Not Equal To",
    symbol: "⋤",
    code: 0x22E4,
    altCode: "&#x22E4;",
    htmlCode: "&#8932;",
  ),
  squareOriginalOfOrNotEqualTo(
    id: "square_original_of_or_not_equal_to",
    name: "Square Original Of Or Not Equal To",
    symbol: "⋥",
    code: 0x22E5,
    altCode: "&#x22E5;",
    htmlCode: "&#8933;",
  ),
  notNormalSubgroupOfOrEqualTo(
    id: "not_normal_subgroup_of_or_equal_to",
    name: "Not Normal Subgroup Of Or Equal To",
    symbol: "⋬",
    code: 0x22EC,
    altCode: "&#x22EC;",
    htmlCode: "&#8940;",
  ),
  doesNotContainAsNormalSubgroupOrEqual(
    id: "does_not_contain_as_normal_subgroup_or_equal",
    name: "Does Not Contain As Normal Subgroup Or Equal",
    symbol: "⋭",
    code: 0x22ED,
    altCode: "&#x22ED;",
    htmlCode: "&#8941;",
  ),
  aplFunctionalSymbolQuadEqual(
    id: "apl_functional_symbol_quad_equal",
    name: "Apl Functional Symbol Quad Equal",
    symbol: "⌸",
    code: 0x2338,
    altCode: "&#x2338;",
    htmlCode: "&#9016;",
  ),
  aplFunctionalSymbolQuadNotEqual(
    id: "apl_functional_symbol_quad_not_equal",
    name: "Apl Functional Symbol Quad Not Equal",
    symbol: "⍯",
    code: 0x236F,
    altCode: "&#x236F;",
    htmlCode: "&#9071;",
  ),
  equalsSignAboveRightwardsArrow(
    id: "equals_sign_above_rightwards_arrow",
    name: "Equals Sign Above Rightwards Arrow",
    symbol: "⥱",
    code: 0x2971,
    altCode: "&#x2971;",
    htmlCode: "&#10609;",
  ),
  rightwardsArrowAboveAlmostEqualTo(
    id: "rightwards_arrow_above_almost_equal_to",
    name: "Rightwards Arrow Above Almost Equal To",
    symbol: "⥵",
    code: 0x2975,
    altCode: "&#x2975;",
    htmlCode: "&#10613;",
  ),
  equalsSignAndSlantedParallel(
    id: "equals_sign_and_slanted_parallel",
    name: "Equals Sign And Slanted Parallel",
    symbol: "⧣",
    code: 0x29E3,
    altCode: "&#x29E3;",
    htmlCode: "&#10723;",
  ),
  equalsSignAndSlantedParallelWithTildeAbove(
    id: "equals_sign_and_slanted_parallel_with_tilde_above",
    name: "Equals Sign And Slanted Parallel With Tilde Above",
    symbol: "⧤",
    code: 0x29E4,
    altCode: "&#x29E4;",
    htmlCode: "&#10724;",
  ),
  equalsSignWithDotBelow(
    id: "equals_sign_with_dot_below",
    name: "Equals Sign With Dot Below",
    symbol: "⩦",
    code: 0x2A66,
    altCode: "&#x2A66;",
    htmlCode: "&#10854;",
  ),
  equalsWithAsterisk(
    id: "equals_with_asterisk",
    name: "Equals With Asterisk",
    symbol: "⩮",
    code: 0x2A6E,
    altCode: "&#x2A6E;",
    htmlCode: "&#10862;",
  ),
  almostEqualToWithCircumflexAccent(
    id: "almost_equal_to_with_circumflex_accent",
    name: "Almost Equal To With Circumflex Accent",
    symbol: "⩯",
    code: 0x2A6F,
    altCode: "&#x2A6F;",
    htmlCode: "&#10863;",
  ),
  approximatelyEqualOrEqualTo(
    id: "approximately_equal_or_equal_to",
    name: "Approximately Equal Or Equal To",
    symbol: "⩰",
    code: 0x2A70,
    altCode: "&#x2A70;",
    htmlCode: "&#10864;",
  ),
  equalsSignAbovePlusSign(
    id: "equals_sign_above_plus_sign",
    name: "Equals Sign Above Plus Sign",
    symbol: "⩱",
    code: 0x2A71,
    altCode: "&#x2A71;",
    htmlCode: "&#10865;",
  ),
  plusSignAboveEqualsSign(
    id: "plus_sign_above_equals_sign",
    name: "Plus Sign Above Equals Sign",
    symbol: "⩲",
    code: 0x2A72,
    altCode: "&#x2A72;",
    htmlCode: "&#10866;",
  ),
  equalsSignAboveTildeOperator(
    id: "equals_sign_above_tilde_operator",
    name: "Equals Sign Above Tilde Operator",
    symbol: "⩳",
    code: 0x2A73,
    altCode: "&#x2A73;",
    htmlCode: "&#10867;",
  ),
  doubleColonEqual(
    id: "double_colon_equal",
    name: "Double Colon Equal",
    symbol: "⩴",
    code: 0x2A74,
    altCode: "&#x2A74;",
    htmlCode: "&#10868;",
  ),
  twoConsecutiveEqualsSigns(
    id: "two_consecutive_equals_signs",
    name: "Two Consecutive Equals Signs",
    symbol: "⩵",
    code: 0x2A75,
    altCode: "&#x2A75;",
    htmlCode: "&#10869;",
  ),
  threeConsecutiveEqualsSigns(
    id: "three_consecutive_equals_signs",
    name: "Three Consecutive Equals Signs",
    symbol: "⩶",
    code: 0x2A76,
    altCode: "&#x2A76;",
    htmlCode: "&#10870;",
  ),
  equalsSignWithTwoDotsAboveAndTwoDotsBelow(
    id: "equals_sign_with_two_dots_above_and_two_dots_below",
    name: "Equals Sign With Two Dots Above And Two Dots Below",
    symbol: "⩷",
    code: 0x2A77,
    altCode: "&#x2A77;",
    htmlCode: "&#10871;",
  ),
  smallerThanOrEqualTo(
    id: "smaller_than_or_equal_to",
    name: "Smaller Than Or Equal To",
    symbol: "⪬",
    code: 0x2AAC,
    altCode: "&#x2AAC;",
    htmlCode: "&#10924;",
  ),
  largerThanOrEqualTo(
    id: "larger_than_or_equal_to",
    name: "Larger Than Or Equal To",
    symbol: "⪭",
    code: 0x2AAD,
    altCode: "&#x2AAD;",
    htmlCode: "&#10925;",
  ),
  equalsSignWithBumpyAbove(
    id: "equals_sign_with_bumpy_above",
    name: "Equals Sign With Bumpy Above",
    symbol: "⪮",
    code: 0x2AAE,
    altCode: "&#x2AAE;",
    htmlCode: "&#10926;",
  ),
  precedesAboveSingleLineEqualsSign(
    id: "precedes_above_single_line_equals_sign",
    name: "Precedes Above Single-line Equals Sign",
    symbol: "⪯",
    code: 0x2AAF,
    altCode: "&#x2AAF;",
    htmlCode: "&#10927;",
  ),
  succeedsAboveSingleLineEqualsSign(
    id: "succeeds_above_single_line_equals_sign",
    name: "Succeeds Above Single-line Equals Sign",
    symbol: "⪰",
    code: 0x2AB0,
    altCode: "&#x2AB0;",
    htmlCode: "&#10928;",
  ),
  precedesAboveSingleLineNotEqualTo(
    id: "precedes_above_single_line_not_equal_to",
    name: "Precedes Above Single-line Not Equal To",
    symbol: "⪱",
    code: 0x2AB1,
    altCode: "&#x2AB1;",
    htmlCode: "&#10929;",
  ),
  succeedsAboveSingleLineNotEqualTo(
    id: "succeeds_above_single_line_not_equal_to",
    name: "Succeeds Above Single-line Not Equal To",
    symbol: "⪲",
    code: 0x2AB2,
    altCode: "&#x2AB2;",
    htmlCode: "&#10930;",
  ),
  precedesAboveEqualsSign(
    id: "precedes_above_equals_sign",
    name: "Precedes Above Equals Sign",
    symbol: "⪳",
    code: 0x2AB3,
    altCode: "&#x2AB3;",
    htmlCode: "&#10931;",
  ),
  succeedsAboveEqualsSign(
    id: "succeeds_above_equals_sign",
    name: "Succeeds Above Equals Sign",
    symbol: "⪴",
    code: 0x2AB4,
    altCode: "&#x2AB4;",
    htmlCode: "&#10932;",
  ),
  precedesAboveNotEqualTo(
    id: "precedes_above_not_equal_to",
    name: "Precedes Above Not Equal To",
    symbol: "⪵",
    code: 0x2AB5,
    altCode: "&#x2AB5;",
    htmlCode: "&#10933;",
  ),
  succeedsAboveNotEqualTo(
    id: "succeeds_above_not_equal_to",
    name: "Succeeds Above Not Equal To",
    symbol: "⪶",
    code: 0x2AB6,
    altCode: "&#x2AB6;",
    htmlCode: "&#10934;",
  ),
  precedesAboveAlmostEqualTo(
    id: "precedes_above_almost_equal_to",
    name: "Precedes Above Almost Equal To",
    symbol: "⪷",
    code: 0x2AB7,
    altCode: "&#x2AB7;",
    htmlCode: "&#10935;",
  ),
  succeedsAboveAlmostEqualTo(
    id: "succeeds_above_almost_equal_to",
    name: "Succeeds Above Almost Equal To",
    symbol: "⪸",
    code: 0x2AB8,
    altCode: "&#x2AB8;",
    htmlCode: "&#10936;",
  ),
  precedesAboveNotAlmostEqualTo(
    id: "precedes_above_not_almost_equal_to",
    name: "Precedes Above Not Almost Equal To",
    symbol: "⪹",
    code: 0x2AB9,
    altCode: "&#x2AB9;",
    htmlCode: "&#10937;",
  ),
  succeedsAboveNotAlmostEqualTo(
    id: "succeeds_above_not_almost_equal_to",
    name: "Succeeds Above Not Almost Equal To",
    symbol: "⪺",
    code: 0x2ABA,
    altCode: "&#x2ABA;",
    htmlCode: "&#10938;",
  ),
  subsetOfOrEqualToWithDotAbove(
    id: "subset_of_or_equal_to_with_dot_above",
    name: "Subset Of Or Equal To With Dot Above",
    symbol: "⫃",
    code: 0x2AC3,
    altCode: "&#x2AC3;",
    htmlCode: "&#10947;",
  ),
  supersetOfOrEqualToWithDotAbove(
    id: "superset_of_or_equal_to_with_dot_above",
    name: "Superset Of Or Equal To With Dot Above",
    symbol: "⫄",
    code: 0x2AC4,
    altCode: "&#x2AC4;",
    htmlCode: "&#10948;",
  ),
  subsetOfAboveEqualsSign(
    id: "subset_of_above_equals_sign",
    name: "Subset Of Above Equals Sign",
    symbol: "⫅",
    code: 0x2AC5,
    altCode: "&#x2AC5;",
    htmlCode: "&#10949;",
  ),
  supersetOfAboveEqualsSign(
    id: "superset_of_above_equals_sign",
    name: "Superset Of Above Equals Sign",
    symbol: "⫆",
    code: 0x2AC6,
    altCode: "&#x2AC6;",
    htmlCode: "&#10950;",
  ),
  subsetOfAboveAlmostEqualTo(
    id: "subset_of_above_almost_equal_to",
    name: "Subset Of Above Almost Equal To",
    symbol: "⫉",
    code: 0x2AC9,
    altCode: "&#x2AC9;",
    htmlCode: "&#10953;",
  ),
  supersetOfAboveAlmostEqualTo(
    id: "superset_of_above_almost_equal_to",
    name: "Superset Of Above Almost Equal To",
    symbol: "⫊",
    code: 0x2ACA,
    altCode: "&#x2ACA;",
    htmlCode: "&#10954;",
  ),
  subsetOfAboveNotEqualTo(
    id: "subset_of_above_not_equal_to",
    name: "Subset Of Above Not Equal To",
    symbol: "⫋",
    code: 0x2ACB,
    altCode: "&#x2ACB;",
    htmlCode: "&#10955;",
  ),
  supersetOfAboveNotEqualTo(
    id: "superset_of_above_not_equal_to",
    name: "Superset Of Above Not Equal To",
    symbol: "⫌",
    code: 0x2ACC,
    altCode: "&#x2ACC;",
    htmlCode: "&#10956;",
  ),
  closedSubsetOrEqualTo(
    id: "closed_subset_or_equal_to",
    name: "Closed Subset Or Equal To",
    symbol: "⫑",
    code: 0x2AD1,
    altCode: "&#x2AD1;",
    htmlCode: "&#10961;",
  ),
  closedSupersetOrEqualTo(
    id: "closed_superset_or_equal_to",
    name: "Closed Superset Or Equal To",
    symbol: "⫒",
    code: 0x2AD2,
    altCode: "&#x2AD2;",
    htmlCode: "&#10962;",
  ),
  equalsSignAboveLeftwardsArrow(
    id: "equals_sign_above_leftwards_arrow",
    name: "Equals Sign Above Leftwards Arrow",
    symbol: "⭀",
    code: 0x2B40,
    altCode: "&#x2B40;",
    htmlCode: "&#11072;",
  ),
  leftwardsArrowAboveReverseAlmostEqualTo(
    id: "leftwards_arrow_above_reverse_almost_equal_to",
    name: "Leftwards Arrow Above Reverse Almost Equal To",
    symbol: "⭂",
    code: 0x2B42,
    altCode: "&#x2B42;",
    htmlCode: "&#11074;",
  ),
  rightwardsArrowAboveReverseAlmostEqualTo(
    id: "rightwards_arrow_above_reverse_almost_equal_to",
    name: "Rightwards Arrow Above Reverse Almost Equal To",
    symbol: "⭈",
    code: 0x2B48,
    altCode: "&#x2B48;",
    htmlCode: "&#11080;",
  ),
  leftwardsArrowAboveAlmostEqualTo(
    id: "leftwards_arrow_above_almost_equal_to",
    name: "Leftwards Arrow Above Almost Equal To",
    symbol: "⭊",
    code: 0x2B4A,
    altCode: "&#x2B4A;",
    htmlCode: "&#11082;",
  ),
  modifierLetterShortEqualsSign(
    id: "modifier_letter_short_equals_sign",
    name: "Modifier Letter Short Equals Sign",
    symbol: "꞊",
    code: 0xA78A,
    altCode: "&#xA78A;",
    htmlCode: "&#42890;",
  ),
  smallEqualsSign(
    id: "small_equals_sign",
    name: "Small Equals Sign",
    symbol: "﹦",
    code: 0xFE66,
    altCode: "&#xFE66;",
    htmlCode: "&#65126;",
  ),
  fullwidthEqualsSign(
    id: "fullwidth_equals_sign",
    name: "Fullwidth Equals Sign",
    symbol: "＝",
    code: 0xFF1D,
    altCode: "&#xFF1D;",
    htmlCode: "&#65309;",
  ),
  identicalTo(
    id: "identical_to",
    name: "Identical To",
    symbol: "≡",
    code: 0x2261,
    altCode: "&#x2261;",
    htmlCode: "&#8801;",
  ),
  notIdenticalTo(
    id: "not_identical_to",
    name: "Not Identical To",
    symbol: "≢",
    code: 0x2262,
    altCode: "&#x2262;",
    htmlCode: "&#8802;",
  ),
  identicalToAndSlantedParallel(
    id: "identical_to_and_slanted_parallel",
    name: "Identical To And Slanted Parallel",
    symbol: "⧥",
    code: 0x29E5,
    altCode: "&#x29E5;",
    htmlCode: "&#10725;",
  ),
  identicalWithDotAbove(
    id: "identical_with_dot_above",
    name: "Identical With Dot Above",
    symbol: "⩧",
    code: 0x2A67,
    altCode: "&#x2A67;",
    htmlCode: "&#10855;",
  ),
  latinSmallLetterTurnedDelta(
    id: "latin_small_letter_turned_delta",
    name: "Latin Small Letter Turned Delta",
    symbol: "ƍ",
    code: 0x018D,
    altCode: "&#x018D;",
    htmlCode: "&#397;",
  ),
  greekCapitalLetterDelta(
    id: "greek_capital_letter_delta",
    name: "Greek Capital Letter Delta",
    symbol: "Δ",
    code: 0x0394,
    altCode: "&#x0394;",
    htmlCode: "&#916;",
  ),
  greekSmallLetterDelta(
    id: "greek_small_letter_delta",
    name: "Greek Small Letter Delta",
    symbol: "δ",
    code: 0x03B4,
    altCode: "&#x03B4;",
    htmlCode: "&#948;",
  ),
  modifierLetterSmallDelta(
    id: "modifier_letter_small_delta",
    name: "Modifier Letter Small Delta",
    symbol: "ᵟ",
    code: 0x1D5F,
    altCode: "&#x1D5F;",
    htmlCode: "&#7519;",
  ),
  latinSmallLetterDelta(
    id: "latin_small_letter_delta",
    name: "Latin Small Letter Delta",
    symbol: "ẟ",
    code: 0x1E9F,
    altCode: "&#x1E9F;",
    htmlCode: "&#7839;",
  ),
  aplFunctionalSymbolDeltaStile(
    id: "apl_functional_symbol_delta_stile",
    name: "Apl Functional Symbol Delta Stile",
    symbol: "⍋",
    code: 0x234B,
    altCode: "&#x234B;",
    htmlCode: "&#9035;",
  ),
  aplFunctionalSymbolQuadDelta(
    id: "apl_functional_symbol_quad_delta",
    name: "Apl Functional Symbol Quad Delta",
    symbol: "⍍",
    code: 0x234D,
    altCode: "&#x234D;",
    htmlCode: "&#9037;",
  ),
  aplFunctionalSymbolDeltaUnderbar(
    id: "apl_functional_symbol_delta_underbar",
    name: "Apl Functional Symbol Delta Underbar",
    symbol: "⍙",
    code: 0x2359,
    altCode: "&#x2359;",
    htmlCode: "&#9049;",
  ),
  ugariticLetterDelta(
    id: "ugaritic_letter_delta",
    name: "Ugaritic Letter Delta",
    symbol: "𐎄",
    code: 0x10384,
    altCode: "&#x10384;",
    htmlCode: "&#66436;",
  ),
  mathematicalBoldCapitalDelta(
    id: "mathematical_bold_capital_delta",
    name: "Mathematical Bold Capital Delta",
    symbol: "𝚫",
    code: 0x1D6AB,
    altCode: "&#x1D6AB;",
    htmlCode: "&#120491;",
  ),
  mathematicalBoldSmallDelta(
    id: "mathematical_bold_small_delta",
    name: "Mathematical Bold Small Delta",
    symbol: "𝛅",
    code: 0x1D6C5,
    altCode: "&#x1D6C5;",
    htmlCode: "&#120517;",
  ),
  mathematicalItalicCapitalDelta(
    id: "mathematical_italic_capital_delta",
    name: "Mathematical Italic Capital Delta",
    symbol: "𝛥",
    code: 0x1D6E5,
    altCode: "&#x1D6E5;",
    htmlCode: "&#120549;",
  ),
  mathematicalItalicSmallDelta(
    id: "mathematical_italic_small_delta",
    name: "Mathematical Italic Small Delta",
    symbol: "𝛿",
    code: 0x1D6FF,
    altCode: "&#x1D6FF;",
    htmlCode: "&#120575;",
  ),
  mathematicalBoldItalicCapitalDelta(
    id: "mathematical_bold_italic_capital_delta",
    name: "Mathematical Bold Italic Capital Delta",
    symbol: "𝜟",
    code: 0x1D71F,
    altCode: "&#x1D71F;",
    htmlCode: "&#120607;",
  ),
  mathematicalBoldItalicSmallDelta(
    id: "mathematical_bold_italic_small_delta",
    name: "Mathematical Bold Italic Small Delta",
    symbol: "𝜹",
    code: 0x1D739,
    altCode: "&#x1D739;",
    htmlCode: "&#120633;",
  ),
  mathematicalSansSerifBoldCapitalDelta(
    id: "mathematical_sans_serif_bold_capital_delta",
    name: "Mathematical Sans-serif Bold Capital Delta",
    symbol: "𝝙",
    code: 0x1D759,
    altCode: "&#x1D759;",
    htmlCode: "&#120665;",
  ),
  mathematicalSansSerifBoldSmallDelta(
    id: "mathematical_sans_serif_bold_small_delta",
    name: "Mathematical Sans-serif Bold Small Delta",
    symbol: "𝝳",
    code: 0x1D773,
    altCode: "&#x1D773;",
    htmlCode: "&#120691;",
  ),
  mathematicalSansSerifBoldItalicCapitalDelta(
    id: "mathematical_sans_serif_bold_italic_capital_delta",
    name: "Mathematical Sans-serif Bold Italic Capital Delta",
    symbol: "𝞓",
    code: 0x1D793,
    altCode: "&#x1D793;",
    htmlCode: "&#120723;",
  ),
  mathematicalSansSerifBoldItalicSmallDelta(
    id: "mathematical_sans_serif_bold_italic_small_delta",
    name: "Mathematical Sans-serif Bold Italic Small Delta",
    symbol: "𝞭",
    code: 0x1D7AD,
    altCode: "&#x1D7AD;",
    htmlCode: "&#120749;",
  ),
  squareRoot(
    id: "square_root",
    name: "Square Root",
    symbol: "√",
    code: 0x221A,
    altCode: "&#x221A;",
    htmlCode: "&#8730;",
  ),
  cubeRoot(
    id: "cube_root",
    name: "Cube Root",
    symbol: "∛",
    code: 0x221B,
    altCode: "&#x221B;",
    htmlCode: "&#8731;",
  ),
  fourthRoot(
    id: "fourth_root",
    name: "Fourth Root",
    symbol: "∜",
    code: 0x221C,
    altCode: "&#x221C;",
    htmlCode: "&#8732;",
  ),
  combiningLeftAngleAbove(
    id: "combining_left_angle_above",
    name: "Combining Left Angle Above",
    symbol: "̚",
    code: 0x031A,
    altCode: "&#x031A;",
    htmlCode: "&#794;",
  ),
  combiningLeftAngleBelow(
    id: "combining_left_angle_below",
    name: "Combining Left Angle Below",
    symbol: "͉",
    code: 0x0349,
    altCode: "&#x0349;",
    htmlCode: "&#841;",
  ),
  rightAngle(
    id: "right_angle",
    name: "Right Angle",
    symbol: "∟",
    code: 0x221F,
    altCode: "&#x221F;",
    htmlCode: "&#8735;",
  ),
  angle(
    id: "angle",
    name: "Angle",
    symbol: "∠",
    code: 0x2220,
    altCode: "&#x2220;",
    htmlCode: "&#8736;",
  ),
  measuredAngle(
    id: "measured_angle",
    name: "Measured Angle",
    symbol: "∡",
    code: 0x2221,
    altCode: "&#x2221;",
    htmlCode: "&#8737;",
  ),
  sphericalAngle(
    id: "spherical_angle",
    name: "Spherical Angle",
    symbol: "∢",
    code: 0x2222,
    altCode: "&#x2222;",
    htmlCode: "&#8738;",
  ),
  rightAngleWithArc(
    id: "right_angle_with_arc",
    name: "Right Angle With Arc",
    symbol: "⊾",
    code: 0x22BE,
    altCode: "&#x22BE;",
    htmlCode: "&#8894;",
  ),
  rightAngleWithZigzagArrow(
    id: "right_angle_with_zigzag_arrow",
    name: "Right Angle With Downwards Zigzag Arrow",
    symbol: "⍼",
    code: 0x237C,
    altCode: "&#x237C;",
    htmlCode: "&#9084;",
  ),
  threeDimensionalAngle(
    id: "three_dimensional_angle",
    name: "Three Dimensional Angle",
    symbol: "⟀",
    code: 0x27C0,
    altCode: "&#x27C0;",
    htmlCode: "&#10176;",
  ),
  measuredAngleOpeningLeft(
    id: "measured_angle_opening_left",
    name: "Measured Angle Opening Left",
    symbol: "⦛",
    code: 0x299B,
    altCode: "&#x299B;",
    htmlCode: "&#10651;",
  ),
  rightAngleVariantWithSquare(
    id: "right_angle_variant_with_square",
    name: "Right Angle Variant With Square",
    symbol: "⦜",
    code: 0x299C,
    altCode: "&#x299C;",
    htmlCode: "&#10652;",
  ),
  measuredRightAngleWithDot(
    id: "measured_right_angle_with_dot",
    name: "Measured Right Angle With Dot",
    symbol: "⦝",
    code: 0x299D,
    altCode: "&#x299D;",
    htmlCode: "&#10653;",
  ),
  angleWithSInside(
    id: "angle_with_s_inside",
    name: "Angle With S Inside",
    symbol: "⦞",
    code: 0x299E,
    altCode: "&#x299E;",
    htmlCode: "&#10654;",
  ),
  acuteAngle(
    id: "acute_angle",
    name: "Acute Angle",
    symbol: "⦟",
    code: 0x299F,
    altCode: "&#x299F;",
    htmlCode: "&#10655;",
  ),
  sphericalAngleOpeningLeft(
    id: "spherical_angle_opening_left",
    name: "Spherical Angle Opening Left",
    symbol: "⦠",
    code: 0x29A0,
    altCode: "&#x29A0;",
    htmlCode: "&#10656;",
  ),
  sphericalAngleOpeningUp(
    id: "spherical_angle_opening_up",
    name: "Spherical Angle Opening Up",
    symbol: "⦡",
    code: 0x29A1,
    altCode: "&#x29A1;",
    htmlCode: "&#10657;",
  ),
  turnedAngle(
    id: "turned_angle",
    name: "Turned Angle",
    symbol: "⦢",
    code: 0x29A2,
    altCode: "&#x29A2;",
    htmlCode: "&#10658;",
  ),
  reversedAngle(
    id: "reversed_angle",
    name: "Reversed Angle",
    symbol: "⦣",
    code: 0x29A3,
    altCode: "&#x29A3;",
    htmlCode: "&#10659;",
  ),
  angleWithUnderbar(
    id: "angle_with_underbar",
    name: "Angle With Underbar",
    symbol: "⦤",
    code: 0x29A4,
    altCode: "&#x29A4;",
    htmlCode: "&#10660;",
  ),
  reversedAngleWithUnderbar(
    id: "reversed_angle_with_underbar",
    name: "Reversed Angle With Underbar",
    symbol: "⦥",
    code: 0x29A5,
    altCode: "&#x29A5;",
    htmlCode: "&#10661;",
  ),
  obliqueAngleOpeningUp(
    id: "oblique_angle_opening_up",
    name: "Oblique Angle Opening Up",
    symbol: "⦦",
    code: 0x29A6,
    altCode: "&#x29A6;",
    htmlCode: "&#10662;",
  ),
  obliqueAngleOpeningDown(
    id: "oblique_angle_opening_down",
    name: "Oblique Angle Opening Down",
    symbol: "⦧",
    code: 0x29A7,
    altCode: "&#x29A7;",
    htmlCode: "&#10663;",
  ),
  measuredAngleWithOpenArmEndingInArrowPointingUpAndRight(
    id: "measured_angle_with_open_arm_ending_in_arrow_pointing_up_and_right",
    name: "Measured Angle With Open Arm Ending In Arrow Pointing Up And Right",
    symbol: "⦨",
    code: 0x29A8,
    altCode: "&#x29A8;",
    htmlCode: "&#10664;",
  ),
  measuredAngleWithOpenArmEndingInArrowPointingUpAndLeft(
    id: "measured_angle_with_open_arm_ending_in_arrow_pointing_up_and_left",
    name: "Measured Angle With Open Arm Ending In Arrow Pointing Up And Left",
    symbol: "⦩",
    code: 0x29A9,
    altCode: "&#x29A9;",
    htmlCode: "&#10665;",
  ),
  measuredAngleWithOpenArmEndingInArrowPointingDownAndRight(
    id: "measured_angle_with_open_arm_ending_in_arrow_pointing_down_and_right",
    name:
        "Measured Angle With Open Arm Ending In Arrow Pointing Down And Right",
    symbol: "⦪",
    code: 0x29AA,
    altCode: "&#x29AA;",
    htmlCode: "&#10666;",
  ),
  measuredAngleWithOpenArmEndingInArrowPointingDownAndLeft(
    id: "measured_angle_with_open_arm_ending_in_arrow_pointing_down_and_left",
    name: "Measured Angle With Open Arm Ending In Arrow Pointing Down And Left",
    symbol: "⦫",
    code: 0x29AB,
    altCode: "&#x29AB;",
    htmlCode: "&#10667;",
  ),
  measuredAngleWithOpenArmEndingInArrowPointingRightAndUp(
    id: "measured_angle_with_open_arm_ending_in_arrow_pointing_right_and_up",
    name: "Measured Angle With Open Arm Ending In Arrow Pointing Right And Up",
    symbol: "⦬",
    code: 0x29AC,
    altCode: "&#x29AC;",
    htmlCode: "&#10668;",
  ),
  measuredAngleWithOpenArmEndingInArrowPointingLeftAndUp(
    id: "measured_angle_with_open_arm_ending_in_arrow_pointing_left_and_up",
    name: "Measured Angle With Open Arm Ending In Arrow Pointing Left And Up",
    symbol: "⦭",
    code: 0x29AD,
    altCode: "&#x29AD;",
    htmlCode: "&#10669;",
  ),
  measuredAngleWithOpenArmEndingInArrowPointingRightAndDown(
    id: "measured_angle_with_open_arm_ending_in_arrow_pointing_right_and_down",
    name:
        "Measured Angle With Open Arm Ending In Arrow Pointing Right And Down",
    symbol: "⦮",
    code: 0x29AE,
    altCode: "&#x29AE;",
    htmlCode: "&#10670;",
  ),
  measuredAngleWithOpenArmEndingInArrowPointingLeftAndDown(
    id: "measured_angle_with_open_arm_ending_in_arrow_pointing_left_and_down",
    name: "Measured Angle With Open Arm Ending In Arrow Pointing Left And Down",
    symbol: "⦯",
    code: 0x29AF,
    altCode: "&#x29AF;",
    htmlCode: "&#10671;",
  ),
  dottedRightPointingAngle(
    id: "dotted_right_pointing_angle",
    name: "Dotted Right-pointing Angle",
    symbol: "⸖",
    code: 0x2E16,
    altCode: "&#x2E16;",
    htmlCode: "&#11798;",
  ),
  modifierLetterLowerRightCornerAngle(
    id: "modifier_letter_lower_right_corner_angle",
    name: "Modifier Letter Lower Right Corner Angle",
    symbol: "ꜚ",
    code: 0xA71A,
    altCode: "&#xA71A;",
    htmlCode: "&#42778;",
  ),
  percentSign(
    id: "percent_sign",
    name: "Percent Sign",
    symbol: "%",
    code: 0x0025,
    altCode: "&#x0025;",
    htmlCode: "&#37;",
  ),
  arabicPercentSign(
    id: "arabic_percent_sign",
    name: "Arabic Percent Sign",
    symbol: "٪",
    code: 0x066A,
    altCode: "&#x066A;",
    htmlCode: "&#1642;",
  ),
  smallPercentSign(
    id: "small_percent_sign",
    name: "Small Percent Sign",
    symbol: "﹪",
    code: 0xFE6A,
    altCode: "&#xFE6A;",
    htmlCode: "&#65130;",
  ),
  fullwidthPercentSign(
    id: "fullwidth_percent_sign",
    name: "Fullwidth Percent Sign",
    symbol: "％",
    code: 0xFF05,
    altCode: "&#xFF05;",
    htmlCode: "&#65285;",
  ),
  plusSign(
    id: "plus_sign",
    name: "Plus Sign",
    symbol: "+",
    code: 0x002B,
    altCode: "&#x002B;",
    htmlCode: "&#43;",
  ),
  plusMinusSign(
    id: "plus_minus_sign",
    name: "Plus-minus Sign",
    symbol: "±",
    code: 0x00B1,
    altCode: "&#x00B1;",
    htmlCode: "&#177;",
  ),
  modifierLetterPlusSign(
    id: "modifier_letter_plus_sign",
    name: "Modifier Letter Plus Sign",
    symbol: "˖",
    code: 0x02D6,
    altCode: "&#x02D6;",
    htmlCode: "&#726;",
  ),
  combiningPlusSignBelow(
    id: "combining_plus_sign_below",
    name: "Combining Plus Sign Below",
    symbol: "̟",
    code: 0x031F,
    altCode: "&#x031F;",
    htmlCode: "&#799;",
  ),
  canadianSyllabicsFinalPlus(
    id: "canadian_syllabics_final_plus",
    name: "Canadian Syllabics Final Plus",
    symbol: "ᐩ",
    code: 0x1429,
    altCode: "&#x1429;",
    htmlCode: "&#5161;",
  ),
  superscriptPlusSign(
    id: "superscript_plus_sign",
    name: "Superscript Plus Sign",
    symbol: "⁺",
    code: 0x207A,
    altCode: "&#x207A;",
    htmlCode: "&#8314;",
  ),
  subscriptPlusSign(
    id: "subscript_plus_sign",
    name: "Subscript Plus Sign",
    symbol: "₊",
    code: 0x208A,
    altCode: "&#x208A;",
    htmlCode: "&#8330;",
  ),
  minusOrPlusSign(
    id: "minus_or_plus_sign",
    name: "Minus-or-plus Sign",
    symbol: "∓",
    code: 0x2213,
    altCode: "&#x2213;",
    htmlCode: "&#8723;",
  ),
  dotPlus(
    id: "dot_plus",
    name: "Dot Plus",
    symbol: "∔",
    code: 0x2214,
    altCode: "&#x2214;",
    htmlCode: "&#8724;",
  ),
  circledPlus(
    id: "circled_plus",
    name: "Circled Plus",
    symbol: "⊕",
    code: 0x2295,
    altCode: "&#x2295;",
    htmlCode: "&#8853;",
  ),
  squaredPlus(
    id: "squared_plus",
    name: "Squared Plus",
    symbol: "⊞",
    code: 0x229E,
    altCode: "&#x229E;",
    htmlCode: "&#8862;",
  ),
  heavyPlusSign(
    id: "heavy_plus_sign",
    name: "Heavy Plus Sign",
    symbol: "➕",
    code: 0x2795,
    altCode: "&#x2795;",
    htmlCode: "&#10133;",
  ),
  doublePlus(
    id: "double_plus",
    name: "Double Plus",
    symbol: "⧺",
    code: 0x29FA,
    altCode: "&#x29FA;",
    htmlCode: "&#10746;",
  ),
  triplePlus(
    id: "triple_plus",
    name: "Triple Plus",
    symbol: "⧻",
    code: 0x29FB,
    altCode: "&#x29FB;",
    htmlCode: "&#10747;",
  ),
  nAryUnionOperatorWithPlus(
    id: "n_ary_union_operator_with_plus",
    name: "N-ary Union Operator With Plus",
    symbol: "⨄",
    code: 0x2A04,
    altCode: "&#x2A04;",
    htmlCode: "&#10756;",
  ),
  plusSignWithSmallCircleAbove(
    id: "plus_sign_with_small_circle_above",
    name: "Plus Sign With Small Circle Above",
    symbol: "⨢",
    code: 0x2A22,
    altCode: "&#x2A22;",
    htmlCode: "&#10786;",
  ),
  plusSignWithCircumflexAccentAbove(
    id: "plus_sign_with_circumflex_accent_above",
    name: "Plus Sign With Circumflex Accent Above",
    symbol: "⨣",
    code: 0x2A23,
    altCode: "&#x2A23;",
    htmlCode: "&#10787;",
  ),
  plusSignWithTildeAbove(
    id: "plus_sign_with_tilde_above",
    name: "Plus Sign With Tilde Above",
    symbol: "⨤",
    code: 0x2A24,
    altCode: "&#x2A24;",
    htmlCode: "&#10788;",
  ),
  plusSignWithDotBelow(
    id: "plus_sign_with_dot_below",
    name: "Plus Sign With Dot Below",
    symbol: "⨥",
    code: 0x2A25,
    altCode: "&#x2A25;",
    htmlCode: "&#10789;",
  ),
  plusSignWithTildeBelow(
    id: "plus_sign_with_tilde_below",
    name: "Plus Sign With Tilde Below",
    symbol: "⨦",
    code: 0x2A26,
    altCode: "&#x2A26;",
    htmlCode: "&#10790;",
  ),
  plusSignWithSubscriptTwo(
    id: "plus_sign_with_subscript_two",
    name: "Plus Sign With Subscript Two",
    symbol: "⨧",
    code: 0x2A27,
    altCode: "&#x2A27;",
    htmlCode: "&#10791;",
  ),
  plusSignInLeftHalfCircle(
    id: "plus_sign_in_left_half_circle",
    name: "Plus Sign In Left Half Circle",
    symbol: "⨭",
    code: 0x2A2D,
    altCode: "&#x2A2D;",
    htmlCode: "&#10797;",
  ),
  plusSignInRightHalfCircle(
    id: "plus_sign_in_right_half_circle",
    name: "Plus Sign In Right Half Circle",
    symbol: "⨮",
    code: 0x2A2E,
    altCode: "&#x2A2E;",
    htmlCode: "&#10798;",
  ),
  subsetWithPlusSignBelow(
    id: "subset_with_plus_sign_below",
    name: "Subset With Plus Sign Below",
    symbol: "⪿",
    code: 0x2ABF,
    altCode: "&#x2ABF;",
    htmlCode: "&#10943;",
  ),
  supersetWithPlusSignBelow(
    id: "superset_with_plus_sign_below",
    name: "Superset With Plus Sign Below",
    symbol: "⫀",
    code: 0x2AC0,
    altCode: "&#x2AC0;",
    htmlCode: "&#10944;",
  ),
  smallPlusSign(
    id: "small_plus_sign",
    name: "Small Plus Sign",
    symbol: "﹢",
    code: 0xFE62,
    altCode: "&#xFE62;",
    htmlCode: "&#65122;",
  ),
  fullwidthPlusSign(
    id: "fullwidth_plus_sign",
    name: "Fullwidth Plus Sign",
    symbol: "＋",
    code: 0xFF0B,
    altCode: "&#xFF0B;",
    htmlCode: "&#65291;",
  ),
  hyphenMinus(
    id: "hyphen_minus",
    name: "Hyphen-minus",
    symbol: "-",
    code: 0x002D,
    altCode: "&#x002D;",
    htmlCode: "&#45;",
  ),
  modifierLetterMinusSign(
    id: "modifier_letter_minus_sign",
    name: "Modifier Letter Minus Sign",
    symbol: "˗",
    code: 0x02D7,
    altCode: "&#x02D7;",
    htmlCode: "&#727;",
  ),
  combiningMinusSignBelow(
    id: "combining_minus_sign_below",
    name: "Combining Minus Sign Below",
    symbol: "̠",
    code: 0x0320,
    altCode: "&#x0320;",
    htmlCode: "&#800;",
  ),
  commercialMinusSign(
    id: "commercial_minus_sign",
    name: "Commercial Minus Sign",
    symbol: "⁒",
    code: 0x2052,
    altCode: "&#x2052;",
    htmlCode: "&#8274;",
  ),
  superscriptMinus(
    id: "superscript_minus",
    name: "Superscript Minus",
    symbol: "⁻",
    code: 0x207B,
    altCode: "&#x207B;",
    htmlCode: "&#8315;",
  ),
  subscriptMinus(
    id: "subscript_minus",
    name: "Subscript Minus",
    symbol: "₋",
    code: 0x208B,
    altCode: "&#x208B;",
    htmlCode: "&#8331;",
  ),
  minusSign(
    id: "minus_sign",
    name: "Minus Sign",
    symbol: "−",
    code: 0x2212,
    altCode: "&#x2212;",
    htmlCode: "&#8722;",
  ),
  setMinus(
    id: "set_minus",
    name: "Set Minus",
    symbol: "∖",
    code: 0x2216,
    altCode: "&#x2216;",
    htmlCode: "&#8726;",
  ),
  dotMinus(
    id: "dot_minus",
    name: "Dot Minus",
    symbol: "∸",
    code: 0x2238,
    altCode: "&#x2238;",
    htmlCode: "&#8760;",
  ),
  minusTilde(
    id: "minus_tilde",
    name: "Minus Tilde",
    symbol: "≂",
    code: 0x2242,
    altCode: "&#x2242;",
    htmlCode: "&#8770;",
  ),
  circledMinus(
    id: "circled_minus",
    name: "Circled Minus",
    symbol: "⊖",
    code: 0x2296,
    altCode: "&#x2296;",
    htmlCode: "&#8854;",
  ),
  squaredMinus(
    id: "squared_minus",
    name: "Squared Minus",
    symbol: "⊟",
    code: 0x229F,
    altCode: "&#x229F;",
    htmlCode: "&#8863;",
  ),
  heavyMinusSign(
    id: "heavy_minus_sign",
    name: "Heavy Minus Sign",
    symbol: "➖",
    code: 0x2796,
    altCode: "&#x2796;",
    htmlCode: "&#10134;",
  ),
  minusSignWithCommaAbove(
    id: "minus_sign_with_comma_above",
    name: "Minus Sign With Comma Above",
    symbol: "⨩",
    code: 0x2A29,
    altCode: "&#x2A29;",
    htmlCode: "&#10793;",
  ),
  minusSignWithDotBelow(
    id: "minus_sign_with_dot_below",
    name: "Minus Sign With Dot Below",
    symbol: "⨪",
    code: 0x2A2A,
    altCode: "&#x2A2A;",
    htmlCode: "&#10794;",
  ),
  minusSignWithFallingDots(
    id: "minus_sign_with_falling_dots",
    name: "Minus Sign With Falling Dots",
    symbol: "⨫",
    code: 0x2A2B,
    altCode: "&#x2A2B;",
    htmlCode: "&#10795;",
  ),
  minusSignWithRisingDots(
    id: "minus_sign_with_rising_dots",
    name: "Minus Sign With Rising Dots",
    symbol: "⨬",
    code: 0x2A2C,
    altCode: "&#x2A2C;",
    htmlCode: "&#10796;",
  ),
  unionWithMinusSign(
    id: "union_with_minus_sign",
    name: "Union With Minus Sign",
    symbol: "⩁",
    code: 0x2A41,
    altCode: "&#x2A41;",
    htmlCode: "&#10817;",
  ),
  similarMinusSimilar(
    id: "similar_minus_similar",
    name: "Similar Minus Similar",
    symbol: "⩬",
    code: 0x2A6C,
    altCode: "&#x2A6C;",
    htmlCode: "&#10860;",
  ),
  smallHyphenMinus(
    id: "small_hyphen_minus",
    name: "Small Hyphen-minus",
    symbol: "﹣",
    code: 0xFE63,
    altCode: "&#xFE63;",
    htmlCode: "&#65123;",
  ),
  fullwidthHyphenMinus(
    id: "fullwidth_hyphen_minus",
    name: "Fullwidth Hyphen-minus",
    symbol: "－",
    code: 0xFF0D,
    altCode: "&#xFF0D;",
    htmlCode: "&#65293;",
  ),
  divisionSign(
    id: "division_sign",
    name: "Division Sign",
    symbol: "÷",
    code: 0x00F7,
    altCode: "&#x00F7;",
    htmlCode: "&#247;",
  ),
  divisionSlash(
    id: "division_slash",
    name: "Division Slash",
    symbol: "∕",
    code: 0x2215,
    altCode: "&#x2215;",
    htmlCode: "&#8725;",
  ),
  circledDivisionSlash(
    id: "circled_division_slash",
    name: "Circled Division Slash",
    symbol: "⊘",
    code: 0x2298,
    altCode: "&#x2298;",
    htmlCode: "&#8856;",
  ),
  divisionTimes(
    id: "division_times",
    name: "Division Times",
    symbol: "⋇",
    code: 0x22C7,
    altCode: "&#x22C7;",
    htmlCode: "&#8903;",
  ),
  heavyDivisionSign(
    id: "heavy_division_sign",
    name: "Heavy Division Sign",
    symbol: "➗",
    code: 0x2797,
    altCode: "&#x2797;",
    htmlCode: "&#10135;",
  ),
  longDivision(
    id: "long_division",
    name: "Long Division",
    symbol: "⟌",
    code: 0x27CC,
    altCode: "&#x27CC;",
    htmlCode: "&#10188;",
  ),
  circledAnticlockwiseRotatedDivisionSign(
    id: "circled_anticlockwise_rotated_division_sign",
    name: "Circled Anticlockwise-rotated Division Sign",
    symbol: "⦼",
    code: 0x29BC,
    altCode: "&#x29BC;",
    htmlCode: "&#10684;",
  ),
  circledDivisionSign(
    id: "circled_division_sign",
    name: "Circled Division Sign",
    symbol: "⨸",
    code: 0x2A38,
    altCode: "&#x2A38;",
    htmlCode: "&#10808;",
  ),
  vulgarFractionOneQuarter(
    id: "vulgar_fraction_one_quarter",
    name: "Vulgar Fraction One Quarter",
    symbol: "¼",
    code: 0x00BC,
    altCode: "&#x00BC;",
    htmlCode: "&#188;",
  ),
  vulgarFractionOneHalf(
    id: "vulgar_fraction_one_half",
    name: "Vulgar Fraction One Half",
    symbol: "½",
    code: 0x00BD,
    altCode: "&#x00BD;",
    htmlCode: "&#189;",
  ),
  vulgarFractionThreeQuarters(
    id: "vulgar_fraction_three_quarters",
    name: "Vulgar Fraction Three Quarters",
    symbol: "¾",
    code: 0x00BE,
    altCode: "&#x00BE;",
    htmlCode: "&#190;",
  ),
  fractionSlash(
    id: "fraction_slash",
    name: "Fraction Slash",
    symbol: "⁄",
    code: 0x2044,
    altCode: "&#x2044;",
    htmlCode: "&#8260;",
  ),
  vulgarFractionOneSeventh(
    id: "vulgar_fraction_one_seventh",
    name: "Vulgar Fraction One Seventh",
    symbol: "⅐",
    code: 0x2150,
    altCode: "&#x2150;",
    htmlCode: "&#8528;",
  ),
  vulgarFractionOneNinth(
    id: "vulgar_fraction_one_ninth",
    name: "Vulgar Fraction One Ninth",
    symbol: "⅑",
    code: 0x2151,
    altCode: "&#x2151;",
    htmlCode: "&#8529;",
  ),
  vulgarFractionOneTenth(
    id: "vulgar_fraction_one_tenth",
    name: "Vulgar Fraction One Tenth",
    symbol: "⅒",
    code: 0x2152,
    altCode: "&#x2152;",
    htmlCode: "&#8530;",
  ),
  vulgarFractionOneThird(
    id: "vulgar_fraction_one_third",
    name: "Vulgar Fraction One Third",
    symbol: "⅓",
    code: 0x2153,
    altCode: "&#x2153;",
    htmlCode: "&#8531;",
  ),
  vulgarFractionTwoThirds(
    id: "vulgar_fraction_two_thirds",
    name: "Vulgar Fraction Two Thirds",
    symbol: "⅔",
    code: 0x2154,
    altCode: "&#x2154;",
    htmlCode: "&#8532;",
  ),
  vulgarFractionOneFifth(
    id: "vulgar_fraction_one_fifth",
    name: "Vulgar Fraction One Fifth",
    symbol: "⅕",
    code: 0x2155,
    altCode: "&#x2155;",
    htmlCode: "&#8533;",
  ),
  vulgarFractionTwoFifths(
    id: "vulgar_fraction_two_fifths",
    name: "Vulgar Fraction Two Fifths",
    symbol: "⅖",
    code: 0x2156,
    altCode: "&#x2156;",
    htmlCode: "&#8534;",
  ),
  vulgarFractionThreeFifths(
    id: "vulgar_fraction_three_fifths",
    name: "Vulgar Fraction Three Fifths",
    symbol: "⅗",
    code: 0x2157,
    altCode: "&#x2157;",
    htmlCode: "&#8535;",
  ),
  vulgarFractionFourFifths(
    id: "vulgar_fraction_four_fifths",
    name: "Vulgar Fraction Four Fifths",
    symbol: "⅘",
    code: 0x2158,
    altCode: "&#x2158;",
    htmlCode: "&#8536;",
  ),
  vulgarFractionOneSixth(
    id: "vulgar_fraction_one_sixth",
    name: "Vulgar Fraction One Sixth",
    symbol: "⅙",
    code: 0x2159,
    altCode: "&#x2159;",
    htmlCode: "&#8537;",
  ),
  vulgarFractionFiveSixths(
    id: "vulgar_fraction_five_sixths",
    name: "Vulgar Fraction Five Sixths",
    symbol: "⅚",
    code: 0x215A,
    altCode: "&#x215A;",
    htmlCode: "&#8538;",
  ),
  vulgarFractionOneEighth(
    id: "vulgar_fraction_one_eighth",
    name: "Vulgar Fraction One Eighth",
    symbol: "⅛",
    code: 0x215B,
    altCode: "&#x215B;",
    htmlCode: "&#8539;",
  ),
  vulgarFractionThreeEighths(
    id: "vulgar_fraction_three_eighths",
    name: "Vulgar Fraction Three Eighths",
    symbol: "⅜",
    code: 0x215C,
    altCode: "&#x215C;",
    htmlCode: "&#8540;",
  ),
  vulgarFractionFiveEighths(
    id: "vulgar_fraction_five_eighths",
    name: "Vulgar Fraction Five Eighths",
    symbol: "⅝",
    code: 0x215D,
    altCode: "&#x215D;",
    htmlCode: "&#8541;",
  ),
  vulgarFractionSevenEighths(
    id: "vulgar_fraction_seven_eighths",
    name: "Vulgar Fraction Seven Eighths",
    symbol: "⅞",
    code: 0x215E,
    altCode: "&#x215E;",
    htmlCode: "&#8542;",
  ),
  fractionNumeratorOne(
    id: "fraction_numerator_one",
    name: "Fraction Numerator One",
    symbol: "⅟",
    code: 0x215F,
    altCode: "&#x215F;",
    htmlCode: "&#8543;",
  ),
  vulgarFractionZeroThirds(
    id: "vulgar_fraction_zero_thirds",
    name: "Vulgar Fraction Zero Thirds",
    symbol: "↉",
    code: 0x2189,
    altCode: "&#x2189;",
    htmlCode: "&#8585;",
  ),
  none;

  final String id;
  final String symbol;
  final String name;
  final int code;
  final String altCode;
  final String htmlCode;

  const Symbols({
    this.id = '',
    this.symbol = '',
    this.name = '',
    this.code = 0,
    this.altCode = '',
    this.htmlCode = '',
  });

  factory Symbols.from(Object? source) {
    return values.firstWhere((e) {
      return e.id == source ||
          e.symbol == source ||
          e.name == source ||
          e.code == source ||
          e.altCode == source ||
          e.htmlCode == source;
    }, orElse: () {
      return Symbols.none;
    });
  }

  @override
  String toString() {
    super.toString();
    return symbol;
  }
}
